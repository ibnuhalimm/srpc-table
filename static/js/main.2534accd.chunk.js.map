{"version":3,"sources":["Context/themeContext.js","Context/pageTitleContext.js","Context/Auth/actionTypes.js","Context/Auth/reducer.js","Context/Auth/context.js","Components/AppRoute.js","Components/Button.js","Components/Form.js","Constant/API.js","Context/Auth/action.js","Constant/StatusCode.js","Pages/Auth/Components/Card.js","Pages/Auth/Components/Title.js","Components/Logo.js","Pages/Auth/Login.js","Pages/Auth/Register.js","Components/Card.js","Components/CardHeader.js","Components/CardBody.js","Components/TableButton.js","Components/TableButtonLink.js","Components/Table.js","Components/Path.js","Components/Modal.js","Services/AuthTokenService.js","Services/CategoryService.js","Components/Navigation.js","Components/AppLayout.js","Pages/Category.js","Pages/Errors/NotFound.js","Img/Theme/light_preview.svg","Img/Theme/dark_preview.svg","Pages/Settings.js","Services/ProductService.js","Pages/CategoryDetail.js","Config/routes.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","initialTheme","children","useState","window","localStorage","storedColorTheme","getItem","matchMedia","matches","getInitialTheme","theme","setTheme","rawSetTheme","root","document","documentElement","isDark","classList","remove","add","setItem","useEffect","Provider","value","PageTitleContext","PageTitleProvider","pageTitle","setPageTitle","title","setPageTitleHandler","RESET_STATE","REQUEST_LOGIN","LOGIN_SUCCESS","LOGIN_ERROR","LOGOUT","REQUEST_REGISTER","REGISTER_SUCCESS","REGISTER_ERROR","initialState","token","JSON","parse","loading","errorMessage","infoMessage","AuthReducer","action","type","info","error","payload","Error","AuthStateContext","AuthDispatchContext","useAuthState","context","useContext","undefined","useAuthDispatch","AuthProvider","useReducer","dispatch","AppRoute","Component","component","path","isPrivate","otherProps","currentUser","render","props","Boolean","to","Button","color","onClick","className","colorTheme","FormGroup","Label","InputText","name","onChange","RequiredMark","ApiClient","axios","create","baseURL","process","withCredentials","Auth","Categories","Products","resetState","registerUser","registerPayload","post","then","response","responseData","data","message","stringify","Promise","resolve","catch","errorMessages","status","Object","keys","errors","map","field","errorText","reject","loginUser","loginPayload","logoutUser","removeItem","Card","Title","Logo","xmlns","width","height","fill","viewBox","d","Login","email","setEmail","password","setPassword","loginSubmitHandler","event","a","preventDefault","userPayload","location","href","method","onSubmit","target","Register","setName","passwordConfirm","setPasswordConfirm","registerUserHandler","password_confirmation","setTimeout","CardHeader","CardBody","TableButton","TableButtonLink","Table","Thead","Tbody","Tr","Th","Td","colspan","colSpan","PathWrapper","Link","Separator","_","CurrentLocation","Modal","show","body","hideClass","ModalContent","ModalHeader","titleText","closeModalHandler","stroke","strokeLinecap","strokeLinejoin","strokeWidth","ModalBody","AuthTokenService","this","AuthToken","CategoryService","get","headers","BearerToken","id","put","delete","responseJson","categoryName","products","Navigation","sidebarClass","setSidebarClass","backdropClass","setBackdropClass","navigation","useHistory","toggleSidebarHandler","currentSidebarClass","currentBackdropClass","exact","activeClassName","push","fillRule","AppLayout","Category","categories","setCategories","isLoaded","setIsLoaded","showFormModal","setShowFormModal","showDeleteModal","setShowDeleteModal","initialCategory","mode","setMode","modalFormTitle","setModalFormTitle","category","setCategory","_fetchCategories","getAllCategories","resultData","code","history","cancelFormModalHandler","saveFormModalHandler","storeNewCategory","alert","updateCategory","editCategoryHandler","getSingleCategory","result","confirmDeleteCategoryHandler","deleteCategory","key","NotFound","Settings","toggleThemeHandler","src","light_theme_preview","alt","dark_theme_preview","ProductService","CategoryDetail","routes","routeParams","useParams","showModal","setShowModal","setCategoryName","setProducts","product","setProduct","_fetchCategory","getSingleCategoryWithProducts","categoryId","detailProductHandler","getSingleProduct","is_new","price_stock","price","stock","dangerouslySetInnerHTML","__html","description","weight","variants","variant","App","route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2534accd.chunk.js","sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\n\nconst getInitialTheme = () => {\n    if (typeof window !== 'undefined' && window.localStorage) {\n        const storedColorTheme = window.localStorage.getItem('color-theme');\n\n        if (typeof storedColorTheme === 'string') {\n            return storedColorTheme;\n        }\n\n        const userMedia = window.matchMedia('(prefers-color-scheme: dark)');\n        if (userMedia.matches) {\n            return 'dark';\n        }\n    }\n\n    return 'light';\n};\n\n\nexport const ThemeContext = createContext();\n\n\nexport const ThemeProvider = ({ initialTheme, children }) => {\n    const [ theme, setTheme ] = useState(getInitialTheme());\n\n    const rawSetTheme = theme => {\n        const root = window.document.documentElement;\n        const isDark = theme === 'dark';\n\n        root.classList.remove(isDark ? 'light' : 'dark');\n        root.classList.add(theme);\n\n        localStorage.setItem('color-theme', theme);\n    };\n\n    if (initialTheme) {\n        rawSetTheme(initialTheme);\n    }\n\n    useEffect(() => {\n        rawSetTheme(theme);\n    }, [theme]);\n\n    return (\n        <ThemeContext.Provider value={{ theme, setTheme }}>\n            {children}\n        </ThemeContext.Provider>\n    );\n}","import React, { createContext, useEffect, useState } from 'react';\n\nexport const PageTitleContext = createContext();\n\nexport const PageTitleProvider = ({ children }) => {\n    const [ pageTitle, setPageTitle ] = useState('React App');\n\n    const setPageTitleHandler = (pageTitle) => {\n        document.title = pageTitle;\n    }\n\n    useEffect(() => {\n        setPageTitleHandler(pageTitle);\n    }, [pageTitle]);\n\n    return (\n        <PageTitleContext.Provider value={{ pageTitle, setPageTitle }}>\n            {children}\n        </PageTitleContext.Provider>\n    );\n}","export const RESET_STATE = 'RESET_STATE';\nexport const REQUEST_LOGIN = 'REQUEST_LOGIN';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const LOGOUT = 'LOGOUT';\nexport const REQUEST_REGISTER = 'REQUEST_REGISTER';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_ERROR = 'REGISTER_ERROR';","import {\n    LOGIN_ERROR,\n    LOGIN_SUCCESS,\n    LOGOUT,\n    REGISTER_ERROR,\n    REGISTER_SUCCESS,\n    REQUEST_LOGIN,\n    REQUEST_REGISTER,\n    RESET_STATE\n} from './actionTypes';\n\n\nlet token = localStorage.getItem('currentUser')\n    ? JSON.parse(localStorage.getItem('currentUser')).token\n    : '';\n\nexport const initialState = {\n    token: '' || token,\n    loading: false,\n    errorMessage: null,\n    infoMessage: null\n};\n\nexport const AuthReducer = (initialState, action) => {\n    switch (action.type) {\n        case RESET_STATE:\n            return {\n                initialState\n            };\n\n        case REQUEST_REGISTER:\n            return {\n                ...initialState,\n                loading: true\n            };\n\n        case REGISTER_SUCCESS:\n            return {\n                ...initialState,\n                loading: false,\n                errorMessage: null,\n                infoMessage: action.info\n            };\n\n        case REGISTER_ERROR:\n            return {\n                ...initialState,\n                loading: false,\n                errorMessage: action.error,\n                infoMessage: ''\n            };\n\n        case REQUEST_LOGIN:\n            return {\n                ...initialState,\n                loading: true\n            };\n\n        case LOGIN_SUCCESS:\n            return {\n                ...initialState,\n                loading: false,\n                token: action.payload.token,\n                errorMessage: null\n            };\n\n        case LOGIN_ERROR:\n            return {\n                ...initialState,\n                loading: false,\n                errorMessage: action.error\n            };\n\n        case LOGOUT:\n            return {\n                ...initialState,\n                token: ''\n            };\n\n        default:\n            throw new Error(`Unknown action type ${action.type}`);\n    }\n}","import React, { createContext, useContext, useReducer } from 'react';\nimport { initialState, AuthReducer } from './reducer';\n\n\nconst AuthStateContext = createContext();\nconst AuthDispatchContext = createContext();\n\nexport const useAuthState = () => {\n    const context = useContext(AuthStateContext);\n\n    if (context === undefined) {\n        throw new Error(`useAuthState should be within AuthProvider`);\n    }\n\n    return context;\n}\n\nexport const useAuthDispatch = () => {\n    const context = useContext(AuthDispatchContext);\n\n    if (context === undefined) {\n        throw new Error(`useAuthDispatch should be within AuthProvider`);\n    }\n\n    return context;\n}\n\nexport const AuthProvider = ({ children }) => {\n    const [ token, dispatch ] = useReducer(AuthReducer, initialState);\n\n    return (\n        <AuthStateContext.Provider value={token}>\n            <AuthDispatchContext.Provider value={dispatch}>\n                {children}\n            </AuthDispatchContext.Provider>\n        </AuthStateContext.Provider>\n    );\n}","import React from 'react';\nimport { Redirect, Route } from 'react-router';\nimport { useAuthState } from '../Context/Auth/context';\n\n\nfunction AppRoute({ component: Component, path, isPrivate, ...otherProps }) {\n    const currentUser = useAuthState();\n\n    return (\n        <Route\n            path={path}\n            render={(props) =>\n                isPrivate && !Boolean(currentUser.token) ? (\n                    <Redirect to=\"/login\" />\n                ) : (\n                    <Component {...props} />\n                )\n            }\n            {...otherProps}\n        />\n    );\n}\n\nexport default AppRoute;","import React from 'react';\n\nfunction Button(props) {\n    const { color, onClick, className, type } = props;\n\n    let colorTheme = 'bg-green-500 text-white';\n\n    switch (color) {\n        case 'red':\n            colorTheme = 'bg-red-500 text-white';\n            break;\n\n        case 'green':\n            colorTheme = 'bg-green-500 text-white';\n            break;\n\n        case 'blue':\n            colorTheme = 'bg-blue-500 text-white';\n            break;\n\n        case 'gray':\n            colorTheme = 'bg-gray-500 text-white';\n            break;\n\n        case 'default':\n            colorTheme = 'bg-react-blue text-react-black';\n            break;\n\n        default:\n            colorTheme = 'bg-react-blue text-react-black';\n            break;\n    }\n\n    return (\n        <button\n            type={type ? type : 'button'}\n            className={`${colorTheme} inline-flex items-center justify-center outline-none focus:outline-none px-5 py-2 h-10 rounded-md shadow-md mb-1 hover:bg-opacity-80 transition duration-300 text-sm ${className}`}\n            onClick={onClick}>\n            {props.children}\n        </button>\n    );\n}\n\nexport default Button;","import React from 'react';\n\n\nexport function FormGroup(props) {\n    return (\n        <div className=\"mb-4\">\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function Label(props) {\n    return (\n        <label className=\"block mb-2\">\n            {props.children}\n        </label>\n    );\n}\n\n\nexport function InputText(props) {\n    const { type, name, value, onChange } = props;\n\n    return (\n        <input\n            type={type ? type : 'text'}\n            className=\"outline-none focus:outline-none w-full border border-solid border-gray-200 dark:border-gray-500 rounded-md px-4 py-2 dark:bg-gray-500\"\n            name={name}\n            onChange={onChange}\n            value={value} />\n    );\n}\n\n\nexport function RequiredMark(props) {\n    return (\n        <span className=\"text-red-500\">*</span>\n    );\n}","import axios from 'axios';\n\nconst BASE_URL_API = process.env.REACT_APP_BASE_URL_API;\n\nexport const ApiClient = axios.create({\n    baseURL: BASE_URL_API,\n    withCredentials: true\n});\n\nexport const CSRFToken = {\n    GET: '/sanctum/csrf-cookie'\n}\n\nexport const Auth = {\n    REGISTER: '/api/auth/register',\n    LOGIN: '/api/auth/login'\n};\n\nexport const Categories = {\n    GET: '/api/product-categories',\n    CREATE: '/api/product-categories',\n    UPDATE: '/api/product-categories',\n    DELETE: '/api/product-categories'\n};\n\nexport const Products = {\n    GET: '/api/products'\n}","import { ApiClient, Auth } from '../../Constant/API';\nimport {\n    LOGIN_ERROR,\n    LOGIN_SUCCESS,\n    LOGOUT,\n    REGISTER_ERROR,\n    REGISTER_SUCCESS,\n    REQUEST_LOGIN,\n    REQUEST_REGISTER,\n    RESET_STATE\n} from './actionTypes';\nimport {\n    FORM_ERROR\n} from '../../Constant/StatusCode';\n\n\nexport const resetState = (dispatch) => {\n    dispatch({\n        type: RESET_STATE\n    });\n}\n\n\nexport const registerUser = (dispatch, registerPayload) => {\n    try {\n        dispatch({\n            type: REQUEST_REGISTER\n        });\n\n        return ApiClient.post(Auth.REGISTER, registerPayload)\n                .then(response => {\n                    let responseData = response.data;\n\n                    if (responseData.data.token) {\n                        dispatch({\n                            type: REGISTER_SUCCESS,\n                            payload: responseData.data.token,\n                            info: responseData.message\n                        });\n\n                        localStorage.setItem('currentUser', JSON.stringify({ token: responseData.data.token }));\n\n                    } else {\n                        dispatch({\n                            type: REGISTER_ERROR,\n                            error: responseData.message\n                        });\n\n                    }\n\n                    return Promise.resolve(responseData);\n                })\n                .catch(({ response }) => {\n                    let responseData = response.data;\n                    let errorMessages = '';\n\n                    if (response.status === FORM_ERROR) {\n                        let errorFields = Object.keys(responseData.errors);\n\n                        errorFields.map(field => {\n                            let errorText = responseData.errors[field][0];\n                            errorMessages +=  `${errorText}\\n`;\n                        });\n\n                    } else {\n                        errorMessages = responseData.message;\n\n                    }\n\n                    dispatch({\n                        type: REGISTER_ERROR,\n                        error: errorMessages\n                    });\n\n                    return Promise.resolve(responseData);\n                });\n\n    } catch (error) {\n        dispatch({\n            type: REGISTER_ERROR,\n            error: error\n        });\n\n        return Promise.reject(error);\n    }\n}\n\nexport const loginUser = (dispatch, loginPayload) => {\n    try {\n        dispatch({ type: REQUEST_LOGIN });\n\n        return ApiClient.post(Auth.LOGIN, loginPayload)\n            .then(response => {\n                let responseData = response.data;\n\n                if (responseData.data.token) {\n                    dispatch({\n                        type: LOGIN_SUCCESS,\n                        payload: responseData.data.token\n                    });\n\n                    localStorage.setItem('currentUser', JSON.stringify({ token: responseData.data.token }));\n\n                } else {\n                    dispatch({\n                        type: LOGIN_ERROR,\n                        error: responseData.message\n                    });\n\n                }\n\n                return Promise.resolve(responseData);\n            })\n            .catch(({ response }) => {\n                let responseData = response.data;\n                let errorMessages = '';\n\n                if (response.status === FORM_ERROR) {\n                    let errorFields = Object.keys(responseData.errors);\n\n                    errorFields.map(field => {\n                        let errorText = responseData.errors[field][0];\n                        errorMessages +=  `${errorText}\\n`;\n                    });\n\n                } else {\n                    errorMessages = responseData.message;\n\n                }\n\n                dispatch({\n                    type: LOGIN_ERROR,\n                    error: errorMessages\n                });\n\n                return Promise.resolve(responseData);\n            });\n\n    } catch (error) {\n        dispatch({\n            type: LOGIN_ERROR,\n            error: error\n        });\n\n        return Promise.reject(error);\n    }\n}\n\nexport const logoutUser = (dispatch) => {\n    dispatch({\n        type: LOGOUT\n    });\n\n    localStorage.removeItem('currentUser');\n}","export const SUCCESS = 200;\nexport const CREATED = 201;\nexport const UNAUTHORIZED = 401;\nexport const ACCESS_DENIED = 403;\nexport const CSRF_MISMATCH = 419;\nexport const FORM_ERROR = 422;\nexport const SERVER_ERROR = 500;","import React from 'react';\n\n\nfunction Card({children}) {\n    return (\n        <div className=\"bg-transparent md:bg-white dark:md:bg-gray-700 md:rounded-lg md:shadow-lg md:px-8 lg:px-3 md:py-10\">\n            {children}\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\n\n\nfunction Title({ children }) {\n    return (\n        <h1 className=\"text-2xl font-bold text-gray-800 dark:text-gray-300\">\n            {children}\n        </h1>\n    );\n}\n\nexport default Title;","import React from 'react';\n\nfunction Logo(){\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"w-full h-full text-react-blue bi bi-box-seam\" viewBox=\"0 0 16 16\">\n            <path d=\"M8.186 1.113a.5.5 0 0 0-.372 0L1.846 3.5l2.404.961L10.404 2l-2.218-.887zm3.564 1.426L5.596 5 8 5.961 14.154 3.5l-2.404-.961zm3.25 1.7-6.5 2.6v7.922l6.5-2.6V4.24zM7.5 14.762V6.838L1 4.239v7.923l6.5 2.6zM7.443.184a1.5 1.5 0 0 1 1.114 0l7.129 2.852A.5.5 0 0 1 16 3.5v8.662a1 1 0 0 1-.629.928l-7.185 2.874a.5.5 0 0 1-.372 0L.63 13.09a1 1 0 0 1-.63-.928V3.5a.5.5 0 0 1 .314-.464L7.443.184z\"/>\n        </svg>\n    );\n}\n\nexport default Logo;","import React, { useContext, useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Button from '../../Components/Button';\nimport { FormGroup, InputText, Label, RequiredMark } from '../../Components/Form';\nimport { PageTitleContext } from '../../Context/pageTitleContext';\nimport { loginUser, logoutUser, resetState } from '../../Context/Auth/action';\nimport { useAuthState, useAuthDispatch } from '../../Context/Auth/context';\nimport Card from './Components/Card';\nimport Title from './Components/Title';\nimport Logo from '../../Components/Logo';\n\nfunction Login(props) {\n    const { pageTitle, setPageTitle } = useContext(PageTitleContext);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const dispatch = useAuthDispatch();\n    const { loading, errorMessage } = useAuthState();\n\n    useEffect(() => {\n        setPageTitle('Login');\n        logoutUser(dispatch);\n        resetState(dispatch);\n    }, []);\n\n\n    const loginSubmitHandler = async (event) => {\n        event.preventDefault();\n\n        let userPayload = {\n            email: email,\n            password: password\n        };\n\n        let response = await loginUser(dispatch, userPayload);\n        if (response.data) {\n            window.location.href = '/';\n        }\n\n        setPassword('');\n\n        return false;\n    }\n\n\n    return (\n        <main className=\"mt-10 mb-28\">\n            <div className=\"w-4/5 sm:w-2/5 md:w-1/2 lg:w-2/5 xl:w-1/3 xl:max-w-sm mx-auto\">\n                <Card>\n                    <div className=\"w-16 mx-auto\">\n                        <Logo />\n                    </div>\n                    <div className=\"text-center mt-3\">\n                        <Title>\n                            Masuk\n                        </Title>\n                    </div>\n                    <div className=\"lg:px-6 mt-8\">\n\n                        {errorMessage\n                        ? <div className=\"text-red-500 text-center mb-4 whitespace-pre-wrap\">{errorMessage}</div>\n                        : '' }\n\n                        <form method=\"post\" onSubmit={(event) => loginSubmitHandler(event)}>\n                            <FormGroup>\n                                <Label>\n                                    Email <RequiredMark/>\n                                </Label>\n                                <InputText\n                                    type=\"text\"\n                                    onChange={(event) => setEmail(event.target.value)}\n                                    value={email} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>\n                                    Password <RequiredMark/>\n                                </Label>\n                                <InputText\n                                    type=\"password\"\n                                    onChange={(event) => setPassword(event.target.value)}\n                                    value={password} />\n                            </FormGroup>\n                            <div>\n                                <Button\n                                    type=\"submit\"\n                                    color=\"default\"\n                                    className=\"w-full\">\n                                    {loading ? 'Memproses...' : 'Masuk'}\n                                </Button>\n                            </div>\n                        </form>\n                        <div className=\"mt-8\">\n                            <p className=\"text-center\">\n                                <span className=\"text-gray-600 dark:text-gray-300\">\n                                    Belum punya akun?\n                                </span>\n\n                                <NavLink to=\"/register\"\n                                    className=\"ml-1 underline font-bold text-gray-700 dark:text-gray-200 hover:text-gray-900 dark:hover:text-gray-100 transition-all duration-300\">\n                                    Daftar\n                                </NavLink>\n                            </p>\n                        </div>\n                    </div>\n                </Card>\n            </div>\n        </main>\n    );\n}\n\nexport default Login;","import React, { useContext, useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Button from '../../Components/Button';\nimport { InputText, Label, RequiredMark } from '../../Components/Form';\nimport { logoutUser, registerUser, resetState } from '../../Context/Auth/action';\nimport { useAuthDispatch, useAuthState } from '../../Context/Auth/context';\nimport { PageTitleContext } from '../../Context/pageTitleContext';\nimport Card from './Components/Card';\nimport Title from './Components/Title';\nimport Logo from '../../Components/Logo';\n\n\nfunction Register() {\n    const { setPageTitle } = useContext(PageTitleContext);\n\n    const dispatch = useAuthDispatch();\n    const { loading, errorMessage, infoMessage } = useAuthState();\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordConfirm, setPasswordConfirm] = useState('');\n\n    useEffect(() => {\n        setPageTitle('Register');\n        logoutUser(dispatch);\n        resetState(dispatch);\n    }, []);\n\n\n    const registerUserHandler = async (event) => {\n        event.preventDefault();\n\n        let userPayload = {\n            name: name,\n            email: email,\n            password: password,\n            password_confirmation: passwordConfirm\n        };\n\n        let response = await registerUser(dispatch, userPayload);\n        if (response.data) {\n            setTimeout(() => {\n                window.location.href = '/';\n            }, 2000);\n        }\n\n        return false;\n    }\n\n\n    return (\n        <main className=\"mt-10 mb-28\">\n            <div className=\"w-4/5 sm:w-2/5 md:w-4/5 lg:w-3/5 xl:max-w-xl mx-auto\">\n                <Card>\n                    <div className=\"w-16 mx-auto\">\n                        <Logo />\n                    </div>\n                    <div className=\"text-center mt-3\">\n                        <Title>\n                            Daftar\n                        </Title>\n                    </div>\n                    <div className=\"lg:px-6 mt-8\">\n\n                        {errorMessage\n                        ? <div className=\"text-red-500 text-center mb-4 whitespace-pre-wrap\">{errorMessage}</div>\n                        : '' }\n\n                        {infoMessage\n                        ? <div className=\"text-green-500 text-center mb-4 whitespace-pre-wrap\">{infoMessage}</div>\n                        : '' }\n\n                        <form method=\"post\" onSubmit={(event) => registerUserHandler(event)}>\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-x-8\">\n                                <div>\n                                    <Label>\n                                        Nama Lengkap <RequiredMark/>\n                                    </Label>\n                                    <InputText\n                                        type=\"text\"\n                                        onChange={(event) => setName(event.target.value)}\n                                        value={name} />\n                                </div>\n                                <div>\n                                    <Label>\n                                        Email <RequiredMark/>\n                                    </Label>\n                                    <InputText\n                                        type=\"text\"\n                                        onChange={(event) => setEmail(event.target.value)}\n                                        value={email} />\n                                </div>\n                                <div>\n                                    <Label>\n                                        Password <RequiredMark/>\n                                    </Label>\n                                    <InputText\n                                        type=\"password\"\n                                        onChange={(event) => setPassword(event.target.value)}\n                                        value={password} />\n                                </div>\n                                <div>\n                                    <Label>\n                                        Ulangi Password <RequiredMark/>\n                                    </Label>\n                                    <InputText\n                                        type=\"password\"\n                                        onChange={(event) => setPasswordConfirm(event.target.value)}\n                                        value={passwordConfirm} />\n                                </div>\n                            </div>\n                            <div className=\"mt-4\">\n                                <Button\n                                    type=\"submit\"\n                                    color=\"default\"\n                                    className=\"w-full\">\n                                    {loading ? 'Memproses...' : 'Daftar'}\n                                </Button>\n                            </div>\n                        </form>\n                        <div className=\"mt-8\">\n                            <p className=\"text-center\">\n                                <span className=\"text-gray-600 dark:text-gray-300\">\n                                    Sudah punya akun?\n                                </span>\n\n                                <NavLink to=\"/login\"\n                                    className=\"ml-1 underline font-bold text-gray-700 dark:text-gray-200 hover:text-gray-900 dark:hover:text-gray-100 transition-all duration-300\">\n                                    Masuk\n                                </NavLink>\n                            </p>\n                        </div>\n                    </div>\n                </Card>\n            </div>\n        </main>\n    );\n}\n\nexport default Register;","import React from 'react';\n\nfunction Card(props) {\n    return (\n        <div className=\"w-full bg-white dark:bg-gray-500 dark:bg-opacity-30 border border-solid border-gray-200 dark:border-gray-500 rounded-lg\">\n            {props.children}\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\n\nfunction CardHeader(props) {\n    return (\n        <div className=\"p-5\">\n            {props.children}\n        </div>\n    );\n}\n\nexport default CardHeader;","import React from 'react';\n\nfunction CardBody(props) {\n    return (\n        <div>\n            {props.children}\n        </div>\n    );\n}\n\nexport default CardBody;","import React from 'react';\n\nfunction TableButton(props) {\n    const { color, onClick } = props;\n\n    let colorTheme = 'bg-green-500 text-white';\n\n    switch (color) {\n        case 'red':\n            colorTheme = 'bg-red-500 text-white';\n            break;\n\n        case 'green':\n            colorTheme = 'bg-green-500 text-white';\n            break;\n\n        case 'blue':\n            colorTheme = 'bg-blue-500 text-white';\n            break;\n\n        case 'default':\n            colorTheme = 'bg-react-blue text-react-black';\n            break;\n\n        default:\n            colorTheme = 'bg-react-blue text-react-black';\n            break;\n    }\n\n    return (\n        <button className={`${colorTheme} outline-none focus:outline-none inline-flex items-center hover:bg-opacity-80 transition duration-300 px-4 py-1 rounded-md text-xs shadow-md mx-1 mb-1`}\n            onClick={onClick}>\n            {props.children}\n        </button>\n    );\n};\n\nexport default TableButton;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction TableButtonLink(props) {\n    const { color, to, onClick } = props;\n\n    let colorTheme = 'bg-green-500 text-white';\n\n    switch (color) {\n        case 'red':\n            colorTheme = 'bg-red-500 text-white';\n            break;\n\n        case 'green':\n            colorTheme = 'bg-green-500 text-white';\n            break;\n\n        case 'blue':\n            colorTheme = 'bg-blue-500 text-white';\n            break;\n\n        case 'default':\n            colorTheme = 'bg-react-blue text-react-black';\n            break;\n\n        default:\n            colorTheme = 'bg-react-blue text-react-black';\n            break;\n    }\n\n    return (\n        <Link to={to} className={`${colorTheme} outline-none focus:outline-none inline-flex items-center hover:bg-opacity-80 transition duration-300 px-4 py-1 rounded-md text-xs shadow-md mx-1 mb-1`}\n            onClick={onClick}>\n            {props.children}\n        </Link>\n    );\n};\n\nexport default TableButtonLink;","import React from 'react';\n\nexport const Table = props => {\n    return (\n        <table className=\"table-data\">\n            {props.children}\n        </table>\n    );\n}\n\nexport const Thead = props => {\n    return (\n        <thead className=\"border border-l-0 border-r-0 border-solid border-gray-200 dark:border-gray-500\">\n            {props.children}\n        </thead>\n    );\n};\n\nexport const Tbody = props => {\n    return (\n        <tbody>\n            {props.children}\n        </tbody>\n    );\n};\n\nexport const Tr = props => {\n    return (\n        <tr className=\"border border-solid border-t-0 border-r-0 border-l-0 border-gray-200 dark:border-gray-500\">\n            {props.children}\n        </tr>\n    );\n};\n\nexport const Th = props => {\n    const { className } = props;\n\n    return (\n        <th className={`px-5 py-3 text-left font-bold ${className}`}>\n            {props.children}\n        </th>\n    );\n};\n\nexport const Td = props => {\n    const { className, colspan } = props;\n\n    return (\n        <td className={`px-5 py-3 ${className}`} colSpan={colspan}>\n            {props.children}\n        </td>\n    );\n};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const PathWrapper = props => {\n    return (\n        <div className=\"mb-4 w-full overflow-x-auto\">\n            <ul className=\"mx-1 breadcrumb\">\n                {props.children}\n            </ul>\n        </div>\n    );\n}\n\n\nexport const Link = props => {\n    const { to } = props;\n\n    return (\n        <li className=\"inline-block\">\n            <NavLink to={to} className=\"text-gray-800 dark:text-gray-300 hover:underline\">\n                {props.children}\n            </NavLink>\n        </li>\n    );\n};\n\n\nexport const Separator = _ => {\n    return (\n        <li className=\"inline-block\">\n            <span className=\"text-gray-400 dark:text-gray-400\">&raquo;</span>\n        </li>\n    );\n};\n\n\nexport const CurrentLocation = props => {\n    return (\n        <li className=\"inline-block\">\n            <span className=\"text-gray-600 dark:text-gray-100\">\n                {props.children}\n            </span>\n        </li>\n    );\n};","import React from 'react';\n\nexport const Modal = props => {\n    const { show } = props;\n\n    document.body.classList.remove('modal-active');\n\n    let hideClass = 'opacity-0 pointer-events-none';\n    if (show === true) {\n        hideClass = '';\n        document.body.classList.add('modal-active');\n    }\n\n    return (\n        <div className={`${hideClass} w-full h-full fixed inset-0 z-40 transition-opacity duration-300`}>\n            <div className=\"absolute w-full h-full bg-gray-900 bg-opacity-80 z-40\"></div>\n            {props.children}\n        </div>\n    );\n};\n\n\nexport const ModalContent = props => {\n    return (\n        <div className=\"relative w-11/12 sm:w-3/5 xl:w-2/5 mx-auto h-auto px-6 py-6 bg-white dark:bg-gray-600 my-10 z-50 rounded-lg\">\n            {props.children}\n        </div>\n    );\n}\n\n\nexport const ModalHeader = props => {\n    const { titleText, closeModalHandler } = props;\n\n    return (\n        <div className=\"mb-8 text-center\">\n            <h4 className=\"font-bold text-lg text-ib-one\">\n                {titleText}\n            </h4>\n            {\n                closeModalHandler !== undefined\n                ?   <button type=\"button\"\n                        className=\"absolute right-0 top-0 mt-6 mr-6 text-gray-600 dark:text-gray-200 hover:text-gray-400 hover:dark:text-gray-100 transition duration-300 outline-none focus:outline-none\"\n                        onClick={closeModalHandler}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                        </svg>\n                    </button>\n                :   null\n            }\n        </div>\n    );\n};\n\n\nexport const ModalBody = props => {\n    return (\n        <div className=\"px-2 max-h-[30rem] sm:max-h-[12rem] md:max-h-[24rem] overflow-y-auto\">\n            {props.children}\n        </div>\n    );\n};","class AuthTokenService {\n    static AuthToken() {\n        let userToken = localStorage.getItem('currentUser')\n                ? JSON.parse(localStorage.getItem('currentUser')).token\n                : '';\n\n        return userToken;\n    }\n\n    static BearerToken() {\n        return `Bearer ${this.AuthToken()}`;\n    }\n}\n\nexport default AuthTokenService;","import {\n    ApiClient,\n    Categories\n} from '../Constant/API';\nimport {\n    SUCCESS\n} from '../Constant/StatusCode';\nimport axios from 'axios';\nimport AuthTokenService from './AuthTokenService';\n\n\nclass CategoryService {\n    static getAllCategories() {\n        return ApiClient.get(`${Categories.GET}`, {\n                headers: {\n                    'Authorization': `${AuthTokenService.BearerToken()}`\n                }\n            })\n            .then(response => {\n                let responseData = response.data;\n                responseData['code'] = SUCCESS;\n\n                return Promise.resolve(responseData);\n            })\n            .catch(({ response }) => {\n                let responseData = response.data;\n                responseData['code'] = response.status;\n\n                return Promise.reject(responseData);\n            });\n    }\n\n\n    static storeNewCategory(data) {\n        return ApiClient.post(`${Categories.CREATE}`, data, {\n                headers: {\n                    'Authorization': `${AuthTokenService.BearerToken()}`\n                }\n            })\n            .then(response => {\n                let responseData = response.data;\n                responseData['code'] = SUCCESS;\n\n                return Promise.resolve(responseData);\n            })\n            .catch(({ response }) => {\n                let responseData = response.data;\n                responseData['code'] = response.status;\n\n                return Promise.reject(responseData);\n            });\n    }\n\n\n    static getSingleCategory(id) {\n        return ApiClient.get(`${Categories.GET}/${id}`, {\n                headers: {\n                    'Authorization': `${AuthTokenService.BearerToken()}`\n                }\n            })\n            .then(response => {\n                let responseData = response.data;\n                responseData['code'] = response.status;\n\n                return Promise.resolve(responseData);\n            })\n            .catch(({ response }) => {\n                let responseData = response.data;\n                responseData['code'] = response.status;\n\n                return Promise.reject(responseData);\n            })\n    }\n\n\n    static updateCategory(id, data) {\n        return ApiClient.put(`${Categories.CREATE}/${id}`, data, {\n                headers: {\n                    'Authorization': `${AuthTokenService.BearerToken()}`\n                }\n            })\n            .then(response => {\n                let responseData = response.data;\n                responseData['code'] = response.status;\n\n                return Promise.resolve(responseData);\n            })\n            .catch(({ response }) => {\n                let responseData = response.data;\n                responseData['code'] = response.status;\n\n                return Promise.reject(responseData);\n            });\n    }\n\n\n    static deleteCategory(id, data) {\n        return ApiClient.delete(`${Categories.CREATE}/${id}`, {\n                headers: {\n                    'Authorization': `${AuthTokenService.BearerToken()}`\n                }\n            })\n            .then(response => {\n                let responseData = response.data;\n                responseData['code'] = response.status;\n\n                return Promise.resolve(responseData);\n            })\n            .catch(({ response }) => {\n                let responseData = response.data;\n                responseData['code'] = response.status;\n\n                return Promise.reject(responseData);\n            });\n    }\n\n\n    static getSingleCategoryWithProducts(id) {\n        return ApiClient.get(`${Categories.GET}/${id}/products`, {\n                headers: {\n                    'Authorization': `${AuthTokenService.BearerToken()}`\n                }\n            })\n            .then(responseJson => {\n                if (responseJson.data.data) {\n                    const responseData = responseJson.data.data;\n\n                    return Promise.resolve({\n                        categoryName: responseData.name,\n                        products: responseData.products\n                    });\n                }\n                else {\n                    return Promise.reject(responseJson.data.message);\n                }\n            })\n            .catch(error => {\n                return Promise.reject(error.response.data.message);\n            })\n    }\n}\n\nexport default CategoryService;","import React, { useState } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { logoutUser } from '../Context/Auth/action';\nimport { useAuthDispatch } from '../Context/Auth/context';\nimport Logo from './Logo';\n\n\nfunction Navigation(props) {\n    const [ sidebarClass, setSidebarClass ] = useState('');\n    const [ backdropClass, setBackdropClass ] = useState('opacity-0 pointer-events-none');\n\n    const dispatch = useAuthDispatch();\n\n    const navigation = useHistory();\n\n    const toggleSidebarHandler = (action) => {\n        let currentSidebarClass = '';\n        let currentBackdropClass = 'opacity-0 pointer-events-none';\n\n        if (action === 'open') {\n            currentSidebarClass = 'left-sidebar--open';\n            currentBackdropClass = '';\n        }\n\n        setSidebarClass(currentSidebarClass);\n        setBackdropClass(currentBackdropClass);\n    };\n\n\n    const logoutUserHandler = () => {\n        logoutUser(dispatch);\n        navigation.push('/login');\n    }\n\n\n    return (\n        <header className=\"fixed top-0 left-0 w-full border border-solid border-t-0 border-r-0 border-l-0 border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-600\">\n            <nav className=\"flex flex-row items-center justify-between xl:justify-end\">\n                <div className={ backdropClass + ' w-full h-full fixed inset-0 z-20 transition-opacity duration-500' }\n                    onClick={() => toggleSidebarHandler('close')}>\n                    <div className=\"absolute w-full h-full bg-gray-900 bg-opacity-50 z-40\"></div>\n                </div>\n                <div className={ sidebarClass + ' transform -translate-x-full xl:translate-x-0 fixed top-0 left-0 w-[63%] sm:w-1/3 lg:w-1/4 xl:w-52 h-full bg-white dark:bg-gray-600 xl:bg-transparent dark:xl:bg-transparent ease-in-out transition-all duration-300 z-30 border lg:border-0 border-solid border-t-0 border-r-0 border-b-0 border-gray-100' }>\n                    <div className=\"w-full h-full flex flex-col overflow-y-auto\">\n                        <div className=\"w-1/2 xl:w-full py-4\">\n                            <NavLink to=\"/\" className=\"block xl:relative xl:-top-3 xl:mx-3 w-12 pl-4\">\n                                <span className=\"xl:relative xl:top-2\">\n                                    <Logo />\n                                </span>\n                            </NavLink>\n                        </div>\n                        <div className=\"w-full\">\n                            <NavLink to=\"/\"\n                                exact\n                                className=\"w-11/12 px-4 xl:px-6 py-3 xl:py-2 text-gray-600 dark:text-gray-100 inline-flex items-center rounded-full rounded-tl-none rounded-bl-none\"\n                                activeClassName=\"bg-blue-100 dark:bg-gray-700 text-blue-600 bg-transparent\"\n                                onClick={() => toggleSidebarHandler('close')}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"w-4 h-4\" viewBox=\"0 0 16 16\">\n                                    <path d=\"M3 2v4.586l7 7L14.586 9l-7-7H3zM2 2a1 1 0 0 1 1-1h4.586a1 1 0 0 1 .707.293l7 7a1 1 0 0 1 0 1.414l-4.586 4.586a1 1 0 0 1-1.414 0l-7-7A1 1 0 0 1 2 6.586V2z\"/>\n                                    <path d=\"M5.5 5a.5.5 0 1 1 0-1 .5.5 0 0 1 0 1zm0 1a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zM1 7.086a1 1 0 0 0 .293.707L8.75 15.25l-.043.043a1 1 0 0 1-1.414 0l-7-7A1 1 0 0 1 0 7.586V3a1 1 0 0 1 1-1v5.086z\"/>\n                                </svg>\n                                <span className=\"ml-4\">\n                                    Kategori\n                                </span>\n                            </NavLink>\n                            <NavLink to=\"/settings\"\n                                className=\"w-11/12 px-4 xl:px-6 py-3 xl:py-2 text-gray-600 dark:text-gray-100 inline-flex items-center rounded-full rounded-tl-none rounded-bl-none\"\n                                activeClassName=\"bg-blue-100 dark:bg-gray-700 text-blue-600 bg-transparent\"\n                                onClick={() => toggleSidebarHandler('close')}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"w-4 h-4\" viewBox=\"0 0 16 16\">\n                                    <path d=\"M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492zM5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0z\"/>\n                                    <path d=\"M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52l-.094-.319zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115l.094-.319z\"/>\n                                </svg>\n                                <span className=\"ml-4\">\n                                    Pengaturan\n                                </span>\n                            </NavLink>\n                            <button type=\"button\"\n                                className=\"w-11/12 px-4 xl:px-6 py-3 xl:py-2 text-gray-600 dark:text-gray-100 inline-flex items-center rounded-full rounded-tl-none rounded-bl-none\"\n                                onClick={() => logoutUserHandler()}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"w-4 h-4 bi bi-box-arrow-right\" viewBox=\"0 0 16 16\">\n                                    <path fillRule=\"evenodd\" d=\"M10 12.5a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v2a.5.5 0 0 0 1 0v-2A1.5 1.5 0 0 0 9.5 2h-8A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-2a.5.5 0 0 0-1 0v2z\"/>\n                                    <path fillRule=\"evenodd\" d=\"M15.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 0 0-.708.708L14.293 7.5H5.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3z\"/>\n                                </svg>\n                                <span className=\"ml-4\">\n                                    Logout\n                                </span>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"w-1/3 xl:hidden\">\n                    <button type=\"button\"\n                        className=\"p-5 md:px-10 outline-none focus:outline-none\"\n                        onClick={() => toggleSidebarHandler('open')}>\n                        <svg className=\"h-6 w-6 text-gray-700 dark:text-gray-100\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16M4 18h16\" />\n                        </svg>\n                    </button>\n                </div>\n                <div className=\"w-1/3 py-3 xl:hidden\">\n                    <NavLink to=\"/\" className=\"block h-8 w-20 mx-auto\">\n                        <Logo/>\n                    </NavLink>\n                </div>\n                <div className=\"w-1/3 xl:pr-5\">\n                    <NavLink to=\"/\" className=\"px-6 py-5 md:px-10 xl:py-4 outline-none focus:outline-none float-right\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"w-5 h-5 text-gray-700 dark:text-gray-100\" viewBox=\"0 0 16 16\">\n                            <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\"/>\n                            <path fillRule=\"evenodd\" d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"/>\n                        </svg>\n                    </NavLink>\n                </div>\n            </nav>\n        </header>\n    );\n}\n\nexport default Navigation;","import React from 'react';\nimport Navigation from './Navigation';\n\n\nfunction AppLayout({children}) {\n    return (\n        <>\n            <Navigation/>\n            <main className=\"my-20 xl:ml-52\">\n                <div className=\"px-5 xl:px-10\">\n                    {children}\n                </div>\n            </main>\n        </>\n    );\n}\n\nexport default AppLayout;","import React, { useContext, useEffect, useState } from 'react';\nimport Card from '../Components/Card';\nimport CardHeader from '../Components/CardHeader';\nimport CardBody from '../Components/CardBody';\nimport TableButton from '../Components/TableButton';\nimport TableButtonLink from '../Components/TableButtonLink';\nimport Button from '../Components/Button';\nimport { Table, Tbody, Td, Th, Thead, Tr } from '../Components/Table';\nimport { CurrentLocation, Link, PathWrapper, Separator } from '../Components/Path';\nimport { Modal, ModalBody, ModalContent, ModalHeader } from '../Components/Modal';\nimport '../Services/CategoryService';\nimport CategoryService from '../Services/CategoryService';\nimport { FormGroup, InputText, Label } from '../Components/Form';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { PageTitleContext } from '../Context/pageTitleContext';\nimport AppLayout from '../Components/AppLayout';\nimport { UNAUTHORIZED } from '../Constant/StatusCode';\n\n\nfunction Category(props) {\n    const [ categories, setCategories ] = useState([]);\n    const [ isLoaded, setIsLoaded ] = useState(false);\n    const [ showFormModal, setShowFormModal ] = useState(false);\n    const [ showDeleteModal, setShowDeleteModal ] = useState(false);\n\n    const { pageTitle, setPageTitle } = useContext(PageTitleContext);\n    const navigation = useHistory();\n\n    const initialCategory = {\n        id: 0,\n        name: ''\n    };\n\n    const [ mode, setMode ] = useState('create');\n    const [ modalFormTitle, setModalFormTitle ] = useState('Tambah Kategori');\n    const [ category, setCategory ] = useState(initialCategory);\n\n\n    useEffect(() => {\n        setPageTitle('Kategori Produk');\n        _fetchCategories()\n    }, []);\n\n\n    const _fetchCategories = async () => {\n        try {\n            const resultData = await CategoryService.getAllCategories();\n\n            setCategories([]);\n            setIsLoaded(true);\n            setCategories(resultData.data);\n\n        } catch (error) {\n            if (error.code === UNAUTHORIZED) {\n                props.history.push('/login');\n            }\n\n        }\n    };\n\n\n    const addCategoryHandler = () => {\n        setMode('create');\n        setModalFormTitle('Tambah Kategori');\n\n        setShowFormModal(true);\n    }\n\n\n    const cancelFormModalHandler = () => {\n        setCategory(initialCategory);\n        setShowFormModal(false);\n    };\n\n\n    const saveFormModalHandler = async () => {\n        if (mode === 'create') {\n            try {\n                await CategoryService.storeNewCategory(category);\n                _fetchCategories();\n                setShowFormModal(false);\n                setCategory(initialCategory);\n\n            } catch (error) {\n                if (error.code === UNAUTHORIZED) {\n                    navigation.push('/login');\n                }\n\n                alert(error.message);\n            }\n        }\n\n\n        if (mode === 'edit') {\n            try {\n                await CategoryService.updateCategory(category.id, category);\n                _fetchCategories();\n                setShowFormModal(false);\n                setCategory(initialCategory);\n\n            } catch (error) {\n                if (error.code === UNAUTHORIZED) {\n                    navigation.push('/login');\n                }\n\n                alert(error.message);\n            }\n        }\n    };\n\n\n    const onChangeHandler = (event) => {\n        setCategory({\n            ...category,\n            [event.target.name]: event.target.value\n        });\n    };\n\n\n    const editCategoryHandler = async (id) => {\n        try {\n            const result = await CategoryService.getSingleCategory(id);\n            setCategory(result.data);\n\n            setMode('edit');\n            setModalFormTitle('Edit Kategori');\n            setShowFormModal(true);\n\n        } catch (error) {\n            alert(error.message);\n\n        }\n    }\n\n\n    const deleteCategoryHandler = (id) => {\n        setCategory({\n            id: id,\n            name: ''\n        });\n\n        setShowDeleteModal(true);\n    }\n\n\n    const cancelDeleteCategoryHandler = () => {\n        setCategory(initialCategory);\n        setShowDeleteModal(false);\n    }\n\n\n    const confirmDeleteCategoryHandler = async () => {\n        try {\n            await CategoryService.deleteCategory(category.id);\n            _fetchCategories();\n            setCategory(initialCategory);\n            setShowDeleteModal(false);\n\n        } catch (error) {\n            alert(error);\n        }\n    }\n\n\n    return (\n        <AppLayout>\n            <PathWrapper>\n                <Link to=\"/\">Beranda</Link>\n                <Separator></Separator>\n                <CurrentLocation>Kategori Produk</CurrentLocation>\n            </PathWrapper>\n            <Card>\n                <CardHeader>\n                    <h1 className=\"text-xl\">Kategori Produk</h1>\n                </CardHeader>\n                <CardBody>\n                    <div className=\"px-5 mb-5\">\n                        <Button color=\"default\"\n                            onClick={() => addCategoryHandler()}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"w-4 h-4\" viewBox=\"0 0 16 16\">\n                                <path d=\"M8 0c-.176 0-.35.006-.523.017l.064.998a7.117 7.117 0 0 1 .918 0l.064-.998A8.113 8.113 0 0 0 8 0zM6.44.152c-.346.069-.684.16-1.012.27l.321.948c.287-.098.582-.177.884-.237L6.44.153zm4.132.271a7.946 7.946 0 0 0-1.011-.27l-.194.98c.302.06.597.14.884.237l.321-.947zm1.873.925a8 8 0 0 0-.906-.524l-.443.896c.275.136.54.29.793.459l.556-.831zM4.46.824c-.314.155-.616.33-.905.524l.556.83a7.07 7.07 0 0 1 .793-.458L4.46.824zM2.725 1.985c-.262.23-.51.478-.74.74l.752.66c.202-.23.418-.446.648-.648l-.66-.752zm11.29.74a8.058 8.058 0 0 0-.74-.74l-.66.752c.23.202.447.418.648.648l.752-.66zm1.161 1.735a7.98 7.98 0 0 0-.524-.905l-.83.556c.169.253.322.518.458.793l.896-.443zM1.348 3.555c-.194.289-.37.591-.524.906l.896.443c.136-.275.29-.54.459-.793l-.831-.556zM.423 5.428a7.945 7.945 0 0 0-.27 1.011l.98.194c.06-.302.14-.597.237-.884l-.947-.321zM15.848 6.44a7.943 7.943 0 0 0-.27-1.012l-.948.321c.098.287.177.582.237.884l.98-.194zM.017 7.477a8.113 8.113 0 0 0 0 1.046l.998-.064a7.117 7.117 0 0 1 0-.918l-.998-.064zM16 8a8.1 8.1 0 0 0-.017-.523l-.998.064a7.11 7.11 0 0 1 0 .918l.998.064A8.1 8.1 0 0 0 16 8zM.152 9.56c.069.346.16.684.27 1.012l.948-.321a6.944 6.944 0 0 1-.237-.884l-.98.194zm15.425 1.012c.112-.328.202-.666.27-1.011l-.98-.194c-.06.302-.14.597-.237.884l.947.321zM.824 11.54a8 8 0 0 0 .524.905l.83-.556a6.999 6.999 0 0 1-.458-.793l-.896.443zm13.828.905c.194-.289.37-.591.524-.906l-.896-.443c-.136.275-.29.54-.459.793l.831.556zm-12.667.83c.23.262.478.51.74.74l.66-.752a7.047 7.047 0 0 1-.648-.648l-.752.66zm11.29.74c.262-.23.51-.478.74-.74l-.752-.66c-.201.23-.418.447-.648.648l.66.752zm-1.735 1.161c.314-.155.616-.33.905-.524l-.556-.83a7.07 7.07 0 0 1-.793.458l.443.896zm-7.985-.524c.289.194.591.37.906.524l.443-.896a6.998 6.998 0 0 1-.793-.459l-.556.831zm1.873.925c.328.112.666.202 1.011.27l.194-.98a6.953 6.953 0 0 1-.884-.237l-.321.947zm4.132.271a7.944 7.944 0 0 0 1.012-.27l-.321-.948a6.954 6.954 0 0 1-.884.237l.194.98zm-2.083.135a8.1 8.1 0 0 0 1.046 0l-.064-.998a7.11 7.11 0 0 1-.918 0l-.064.998zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3z\"/>\n                            </svg>\n                            <span className=\"ml-2\">Tambah Kategori</span>\n                        </Button>\n                    </div>\n                    <div className=\"w-full overflow-x-auto\">\n                        <Table>\n                            <Thead className=\"border border-l-0 border-r-0 border-solid border-gray-200\">\n                                <Tr>\n                                    <Th className=\"px-5 py-3 text-left w-10\">#</Th>\n                                    <Th className=\"px-5 py-3 text-left\">Kategori</Th>\n                                    <Th className=\"px-5 py-3 text-left w-80\">###</Th>\n                                </Tr>\n                            </Thead>\n                            <Tbody>\n                                {\n                                    isLoaded\n                                    ?   categories.map((category, key) => {\n                                            return (\n                                                <Tr key={key}>\n                                                    <Td className=\"px-5 py-3\">\n                                                        {key + 1}\n                                                    </Td>\n                                                    <Td className=\"px-5 py-3\">\n                                                        <NavLink to={`${category.id}/products`} className=\"hover:underline\">\n                                                            {category.name}\n                                                        </NavLink>\n                                                    </Td>\n                                                    <Td className=\"px-5 py-3\">\n                                                        <TableButtonLink\n                                                            to={`${category.id}/products`}\n                                                            color=\"blue\">\n                                                            Produk\n                                                        </TableButtonLink>\n                                                        <TableButton\n                                                            color=\"green\"\n                                                            onClick={() => editCategoryHandler(category.id)}>\n                                                            Edit\n                                                        </TableButton>\n                                                        <TableButton\n                                                            color=\"red\"\n                                                            onClick={() => deleteCategoryHandler(category.id)}>\n                                                            Hapus\n                                                        </TableButton>\n                                                    </Td>\n                                                </Tr>\n                                            )\n                                        })\n                                    :   <Tr>\n                                            <Td colspan=\"3\" className=\"text-center\">\n                                                <span className=\"text-blue-500\">Memuat data...</span>\n                                            </Td>\n                                        </Tr>\n                                }\n                            </Tbody>\n                        </Table>\n                    </div>\n                </CardBody>\n            </Card>\n\n\n            <Modal show={showFormModal}>\n                <ModalContent>\n                    <ModalHeader titleText={modalFormTitle} closeModalHandler={cancelFormModalHandler} />\n                    <ModalBody>\n                        <div>\n                            <FormGroup>\n                                <Label>Nama Kategori</Label>\n                                <InputText\n                                    name=\"name\"\n                                    onChange={onChangeHandler}\n                                    value={category.name} />\n                            </FormGroup>\n                        </div>\n                        <div className=\"text-center\">\n                            <Button\n                                color=\"gray\"\n                                onClick={cancelFormModalHandler}>\n                                Batal\n                            </Button>\n                            <Button\n                                color=\"default\"\n                                onClick={saveFormModalHandler}\n                                className=\"ml-2\">\n                                Simpan\n                            </Button>\n                        </div>\n                    </ModalBody>\n                </ModalContent>\n            </Modal>\n\n\n            <Modal show={showDeleteModal}>\n                <ModalContent>\n                    <ModalHeader titleText=\"Hapus Kategori\" />\n                    <ModalBody>\n                        <div className=\"mb-5 text-center\">\n                            Apakah Anda yakin ingin menghapus kategori ini?\n                        </div>\n                        <div className=\"text-center\">\n                            <Button\n                                color=\"gray\"\n                                onClick={cancelDeleteCategoryHandler}>\n                                Tidak\n                            </Button>\n                            <Button\n                                color=\"red\"\n                                onClick={confirmDeleteCategoryHandler}\n                                className=\"ml-2\">\n                                Ya, Hapus\n                            </Button>\n                        </div>\n                    </ModalBody>\n                </ModalContent>\n            </Modal>\n        </AppLayout>\n    );\n}\n\nexport default Category;","import React from 'react';\n\nfunction NotFound() {\n    return (\n        <div className=\"w-full bg-white border border-solid border-gray-100 rounded-lg p-5\">\n            <h1 className=\"text-2xl mb-3\">Not Found</h1>\n            <p>\n                Halaman tidak ditemukan\n            </p>\n        </div>\n    );\n}\n\nexport default NotFound;","export default __webpack_public_path__ + \"static/media/light_preview.9676d526.svg\";","export default __webpack_public_path__ + \"static/media/dark_preview.73e85d03.svg\";","import React, { useContext, useEffect } from 'react';\nimport Card from '../Components/Card';\nimport CardBody from '../Components/CardBody';\nimport CardHeader from '../Components/CardHeader';\nimport { CurrentLocation, Link, PathWrapper, Separator } from '../Components/Path';\nimport light_theme_preview from '../Img/Theme/light_preview.svg';\nimport dark_theme_preview from '../Img/Theme/dark_preview.svg';\nimport { ThemeContext } from '../Context/themeContext';\nimport { PageTitleContext } from '../Context/pageTitleContext';\nimport AppLayout from '../Components/AppLayout';\n\n\nfunction Settings() {\n    const { theme, setTheme } = useContext(ThemeContext);\n    const { setPageTitle } = useContext(PageTitleContext);\n\n    useEffect(() => {\n        setPageTitle('Pengaturan');\n    }, []);\n\n    const isDark = () => {\n        return theme === 'dark';\n    }\n\n    const toggleThemeHandler = color => {\n        setTheme(color);\n    }\n\n    return (\n        <AppLayout>\n            <PathWrapper>\n                <Link to=\"/\">Beranda</Link>\n                <Separator></Separator>\n                <CurrentLocation>Pengaturan</CurrentLocation>\n            </PathWrapper>\n            <Card>\n                <CardHeader>\n                    <h1 className=\"text-xl\">Pengaturan Tema</h1>\n                </CardHeader>\n                <CardBody>\n                    <div className=\"px-6 pb-10\">\n                        <div className=\"w-full sm:w-3/5 md:w-1/2 lg:w-2/5 flex flex-row\">\n                            <div className=\"w-1/2 mr-2\">\n                                <div\n                                    className={isDark()\n                                            ? 'border-2 border-solid rounded-lg bg-gray-500 hover:cursor-pointer border-gray-500'\n                                            : 'border-2 border-solid rounded-lg bg-white hover:cursor-pointer border-react-blue'}\n                                    onClick={() => toggleThemeHandler('light')}>\n                                    <img src={light_theme_preview} alt=\"Light Theme Preview\" className=\"rounded-md rounded-bl-none rounded-br-none\"/>\n                                    <div className=\"px-4 py-3 bg-gray-50 dark:bg-gray-500 rounded-lg rounded-tl-none rounded-tr-none\">\n                                        <div className=\"flex items-center\">\n                                            <div className={isDark()\n                                                        ? 'bg-white border-4 rounded-full w-4 h-4 flex flex-shrink-0 justify-center items-center mr-2 border-gray-300'\n                                                        : 'bg-white border-4 rounded-full w-4 h-4 flex flex-shrink-0 justify-center items-center mr-2 border-react-blue'}></div>\n                                            <span>\n                                                Light\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"w-1/2 ml-2\">\n                                <div\n                                    className={isDark()\n                                        ? 'border-2 border-solid rounded-lg bg-gray-500 hover:cursor-pointer border-react-blue'\n                                        : 'border-2 border-solid rounded-lg bg-white hover:cursor-pointer border-gray-500'}\n                                    onClick={() => toggleThemeHandler('dark')}>\n                                    <img src={dark_theme_preview} alt=\"Dark Theme Preview\" className=\"rounded-md rounded-bl-none rounded-br-none\"/>\n                                    <div className=\"px-4 py-3 bg-gray-50 dark:bg-gray-500 rounded-lg rounded-tl-none rounded-tr-none\">\n                                        <div className=\"flex items-center\">\n                                            <div className={isDark()\n                                                        ? 'bg-white border-4 rounded-full w-4 h-4 flex flex-shrink-0 justify-center items-center mr-2 border-react-blue'\n                                                        : 'bg-white border-4 rounded-full w-4 h-4 flex flex-shrink-0 justify-center items-center mr-2 border-gray-300'}></div>\n                                            <span>\n                                                Dark\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </CardBody>\n            </Card>\n        </AppLayout>\n    );\n}\n\nexport default Settings;","import { ApiClient, Products } from '../Constant/API';\nimport AuthTokenService from './AuthTokenService';\n\n\nclass ProductService {\n    static getSingleProduct(id) {\n        return ApiClient.get(`${Products.GET}/${id}`, {\n                headers: {\n                    'Authorization': `${AuthTokenService.BearerToken()}`\n                }\n            })\n            .then(responseJson => {\n                if (responseJson.data.data) {\n                    return Promise.resolve(responseJson.data.data);\n                }\n                else {\n                    return Promise.reject(responseJson.data.message);\n                }\n            })\n            .catch(error => {\n                return Promise.reject(error.response.data.message);\n            })\n    }\n}\n\nexport default ProductService;","import React, { useContext, useEffect, useState } from 'react';\nimport Card from '../Components/Card';\nimport CardHeader from '../Components/CardHeader';\nimport CardBody from '../Components/CardBody';\nimport { Table, Tbody, Td, Th, Thead, Tr } from '../Components/Table';\nimport TableButton from '../Components/TableButton';\nimport { CurrentLocation, Link, PathWrapper, Separator } from '../Components/Path';\nimport { Modal, ModalBody, ModalContent, ModalHeader } from '../Components/Modal';\nimport { useParams } from 'react-router';\nimport CategoryService from '../Services/CategoryService';\nimport ProductService from '../Services/ProductService';\nimport { PageTitleContext } from '../Context/pageTitleContext';\nimport AppLayout from '../Components/AppLayout';\n\nfunction CategoryDetail(props) {\n    const routeParams = useParams();\n    const [ showModal, setShowModal ] = useState(false);\n    const [ categoryName, setCategoryName ] = useState('');\n    const [ products, setProducts ] = useState([]);\n    const [ product, setProduct ] = useState({});\n\n    const { setPageTitle } = useContext(PageTitleContext);\n\n    useEffect(() => {\n        _fetchCategory();\n    }, []);\n\n\n    const _fetchCategory = async () => {\n        try {\n            const result = await CategoryService.getSingleCategoryWithProducts(routeParams.categoryId);\n            setCategoryName(result.categoryName);\n            setProducts(result.products);\n\n            setPageTitle(`Kategori Produk: ${result.categoryName}`);\n\n        } catch (error) {\n            alert(error);\n\n        }\n    }\n\n\n    const detailProductHandler = async (id) => {\n        try {\n            const result = await ProductService.getSingleProduct(id);\n            setProduct(result);\n            setShowModal(true);\n\n        } catch (error) {\n            alert(error);\n        }\n    }\n\n\n    const toggleModalHandler = status => {\n        if (status === 'open') {\n            setShowModal(true);\n        }\n        else {\n            setShowModal(false);\n        }\n    }\n\n\n    return (\n        <AppLayout>\n            <PathWrapper>\n                <Link to=\"/\">Beranda</Link>\n                <Separator></Separator>\n                <Link to=\"/\">Kategori Produk</Link>\n                <Separator></Separator>\n                <CurrentLocation>Produk</CurrentLocation>\n            </PathWrapper>\n            <Card>\n                <CardHeader>\n                    <h1 className=\"text-xl\">Kategori : {categoryName}</h1>\n                </CardHeader>\n                <CardBody>\n                    <div className=\"px-5 mb-3\">\n                        <h1 className=\"text-base\">Data Produk</h1>\n                    </div>\n                    <div className=\"w-full overflow-x-auto\">\n                        <Table>\n                            <Thead>\n                                <Tr>\n                                    <Th className=\"w-10\">#</Th>\n                                    <Th className=\"w-96\">Nama Produk</Th>\n                                    <Th className=\"w-24\">Kondisi</Th>\n                                    <Th className=\"w-44\">Harga</Th>\n                                    <Th className=\"w-24\">Stok</Th>\n                                    <Th className=\"w-44\">###</Th>\n                                </Tr>\n                            </Thead>\n                            <Tbody>\n                                {products.map((product, key) => {\n                                    return (\n                                        <Tr key={key}>\n                                            <Td>\n                                                {key+1}\n                                            </Td>\n                                            <Td>\n                                                {product.name}\n                                            </Td>\n                                            <Td>\n                                                {product.is_new === 1 ? 'Baru' : 'Bekas'}\n                                            </Td>\n                                            <Td>\n                                                Rp {product.price_stock.price},-\n                                            </Td>\n                                            <Td>\n                                                {product.price_stock.stock}\n                                            </Td>\n                                            <Td>\n                                                <TableButton\n                                                    color=\"default\"\n                                                    onClick={() => detailProductHandler(product.id)}>\n                                                    Detail\n                                                </TableButton>\n                                            </Td>\n                                        </Tr>\n                                    );\n                                }) }\n                            </Tbody>\n                        </Table>\n                    </div>\n                </CardBody>\n            </Card>\n\n\n            {\n                product\n                ?   <Modal show={showModal}>\n                        <ModalContent>\n                            <ModalHeader titleText=\"Detail Produk\" closeModalHandler={() => toggleModalHandler('close')} />\n                            <ModalBody>\n                                <div className=\"mb-4\">\n                                    <h4 className=\"font-bold\">\n                                        Nama\n                                    </h4>\n                                    <p className=\"text-gray-600 dark:text-gray-300\">\n                                        {product.name}\n                                    </p>\n                                </div>\n                                <div className=\"mb-4\">\n                                    <h4 className=\"font-bold\">\n                                        Deskripsi\n                                    </h4>\n                                    <div className=\"text-gray-600 dark:text-gray-300\">\n                                        <div dangerouslySetInnerHTML={{ __html: product.description }}></div>\n                                    </div>\n                                </div>\n                                <div className=\"mb-4\">\n                                    <div className=\"flex flex-row\">\n                                        <div className=\"w-1/2 mr-4\">\n                                            <h4 className=\"font-bold\">\n                                                Kondisi\n                                            </h4>\n                                            <p className=\"text-gray-600 dark:text-gray-300\">\n                                                {product.is_new ? 'Baru' : 'Bekas'}\n                                            </p>\n                                        </div>\n                                        <div className=\"w-1/2 ml-4\">\n                                            <h4 className=\"font-bold\">\n                                                Berat\n                                            </h4>\n                                            <p className=\"text-gray-600 dark:text-gray-300\">\n                                                {product.weight} gram\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                                {\n                                    product.price_stock\n                                    ?   <div className=\"mb-4\">\n                                            <div className=\"flex flex-row\">\n                                                <div className=\"w-1/2 mr-4\">\n                                                    <h4 className=\"font-bold\">\n                                                        Harga\n                                                    </h4>\n                                                    <p className=\"text-gray-600 dark:text-gray-300\">\n                                                        Rp {product.price_stock.price !== undefined ? product.price_stock.price : 0},-\n                                                    </p>\n                                                </div>\n                                                <div className=\"w-1/2 ml-4\">\n                                                    <h4 className=\"font-bold\">\n                                                        Stok\n                                                    </h4>\n                                                    <p className=\"text-gray-600 dark:text-gray-300\">\n                                                        {product.price_stock.stock !== undefined ? product.price_stock.stock : 0}\n                                                    </p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    :   null\n                                }\n                                {\n                                    product.variants\n                                    ?   <div className=\"mb-4\">\n                                            <Table>\n                                                <Thead>\n                                                    <Tr>\n                                                        <Th>Varian</Th>\n                                                        <Th>Harga</Th>\n                                                        <Th>Stok</Th>\n                                                    </Tr>\n                                                </Thead>\n                                                <Tbody>\n                                                    {product.variants.map((variant, key) => {\n                                                        return (\n                                                            <Tr key={key}>\n                                                                <Td>{variant.name}</Td>\n                                                                <Td>Rp {variant.price},-</Td>\n                                                                <Td>{variant.stock}</Td>\n                                                            </Tr>\n                                                        );\n                                                    })}\n                                                </Tbody>\n                                            </Table>\n                                        </div>\n                                    :   null\n                                }\n                            </ModalBody>\n                        </ModalContent>\n                    </Modal>\n                :   null\n            }\n        </AppLayout>\n    );\n}\n\nexport default CategoryDetail;","import Login from '../Pages/Auth/Login';\nimport Register from '../Pages/Auth/Register';\nimport Category from '../Pages/Category';\nimport NotFound from '../Pages/Errors/NotFound'\nimport Settings from '../Pages/Settings';\nimport CategoryDetail from '../Pages/CategoryDetail';\n\n\nconst routes = [\n    {\n        path: '/register',\n        exact: true,\n        component: Register,\n        isPrivate: false\n    },\n    {\n        path: '/login',\n        exact: true,\n        component: Login,\n        isPrivate: false\n    },\n    {\n        path: '/',\n        exact: true,\n        component: Category,\n        isPrivate: true\n    },\n    {\n        path: '/settings',\n        exact: true,\n        component: Settings,\n        isPrivate: true\n    },\n    {\n        path: '/:categoryId/products',\n        exact: true,\n        component: CategoryDetail,\n        isPrivate: true\n    },\n    {\n        path: '/*',\n        exact: false,\n        component: NotFound,\n        isPrivate: true\n    }\n];\n\nexport default routes;","import './App.css';\nimport { BrowserRouter, Switch } from 'react-router-dom';\nimport { ThemeProvider } from './Context/themeContext';\nimport { PageTitleProvider } from './Context/pageTitleContext';\nimport { AuthProvider } from './Context/Auth/context';\nimport AppRoute from './Components/AppRoute';\nimport routes from './Config/routes';\n\n\nfunction App() {\n    return (\n        <AuthProvider>\n            <ThemeProvider>\n                <PageTitleProvider>\n                    <BrowserRouter>\n                        <Switch>\n                            {routes.map((route) => (\n                                <AppRoute\n                                    key={route.path}\n                                    path={route.path}\n                                    component={route.component}\n                                    isPrivate={route.isPrivate}\n                                    exact={route.exact} />\n                            ))}\n                        </Switch>\n                    </BrowserRouter>\n                </PageTitleProvider>\n            </ThemeProvider>\n        </AuthProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}