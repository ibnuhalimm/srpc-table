{"version":3,"sources":["logo.svg","components/Navigation.js","components/Card.js","components/CardHeader.js","components/CardBody.js","components/TableButton.js","components/TableButtonLink.js","components/Button.js","components/Table.js","components/Path.js","components/Modal.js","constant/API.js","services/CategoryService.js","components/Form.js","pages/Category.js","pages/errors/NotFound.js","services/ProductService.js","pages/CategoryDetail.js","img/theme/light_preview.svg","img/theme/dark_preview.svg","context/themeContext.js","pages/Settings.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","useState","sidebarClass","setSidebarClass","backdropClass","setBackdropClass","toggleSidebarHandler","action","currentSidebarClass","currentBackdropClass","className","onClick","to","src","logo","alt","exact","activeClassName","xmlns","width","height","fill","viewBox","d","type","stroke","strokeLinecap","strokeLinejoin","strokeWidth","fillRule","Card","props","children","CardHeader","CardBody","TableButton","color","colorTheme","TableButtonLink","Button","Table","Thead","Tbody","Tr","Th","Td","colspan","colSpan","PathWrapper","Link","Separator","_","CurrentLocation","Modal","show","document","body","classList","remove","hideClass","add","ModalContent","ModalHeader","titleText","closeModalHandler","undefined","ModalBody","BASE_URL_API","process","Categories","GET","CREATE","UPDATE","DELETE","Products","CategoryService","fetch","then","response","json","responseJson","data","Promise","resolve","reject","axios","post","catch","error","message","id","get","put","delete","responseData","categoryName","name","products","FormGroup","Label","InputText","onChange","value","Category","categories","setCategories","isLoaded","setIsLoaded","showFormModal","setShowFormModal","showDeleteModal","setShowDeleteModal","initialCategory","mode","setMode","modalFormTitle","setModalFormTitle","category","setCategory","useEffect","_fetchCategories","a","getAllCategories","alert","cancelFormModalHandler","saveFormModalHandler","storeNewCategory","updateCategory","editCategoryHandler","getSingleCategory","result","confirmDeleteCategoryHandler","deleteCategory","map","key","event","target","NotFound","ProductService","CategoryDetail","routeParams","useParams","showModal","setShowModal","setCategoryName","setProducts","product","setProduct","_fetchCategory","getSingleCategoryWithProducts","categoryId","detailProductHandler","getSingleProduct","is_new","price_stock","price","stock","dangerouslySetInnerHTML","__html","description","weight","variants","variant","ThemeContext","createContext","ThemeProvider","initialTheme","window","localStorage","storedColorTheme","getItem","matchMedia","matches","getInitialTheme","theme","setTheme","rawSetTheme","root","documentElement","isDark","setItem","Provider","Settings","useContext","toggleThemeHandler","light_theme_preview","dark_theme_preview","App","path","component","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.978d5ff3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\nimport logo from '../logo.svg';\nimport { NavLink } from 'react-router-dom';\n\nfunction Navigation() {\n    const [ sidebarClass, setSidebarClass ] = useState('');\n    const [ backdropClass, setBackdropClass ] = useState('opacity-0 pointer-events-none');\n\n    const toggleSidebarHandler = (action) => {\n        let currentSidebarClass = '';\n        let currentBackdropClass = 'opacity-0 pointer-events-none';\n\n        if (action === 'open') {\n            currentSidebarClass = 'left-sidebar--open';\n            currentBackdropClass = '';\n        }\n\n        setSidebarClass(currentSidebarClass);\n        setBackdropClass(currentBackdropClass);\n    };\n\n\n    return (\n        <header className=\"fixed top-0 left-0 w-full border border-solid border-t-0 border-r-0 border-l-0 border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-700 dark:bg-opacity-30\">\n            <nav className=\"flex flex-row items-center justify-between xl:justify-end\">\n                <div className={ backdropClass + ' w-full h-full fixed inset-0 z-20 transition-opacity duration-500' }\n                    onClick={() => toggleSidebarHandler('close')}>\n                    <div className=\"absolute w-full h-full bg-gray-900 bg-opacity-50 z-40\"></div>\n                </div>\n                <div className={ sidebarClass + ' transform -translate-x-full xl:translate-x-0 fixed top-0 left-0 w-[63%] sm:w-1/3 lg:w-1/4 xl:w-52 h-full bg-white dark:bg-gray-600 xl:bg-transparent dark:xl:bg-transparent ease-in-out transition-all duration-300 z-30 border lg:border-0 border-solid border-t-0 border-r-0 border-b-0 border-gray-100' }>\n                    <div className=\"w-full h-full flex flex-col overflow-y-auto\">\n                        <div className=\"w-1/2 xl:w-full py-4\">\n                            <NavLink to=\"/\" className=\"block xl:relative xl:-top-3 xl:mx-3\">\n                                <img src={logo} alt=\"Webservice\" className=\"w-16 h-auto\" />\n                            </NavLink>\n                        </div>\n                        <div className=\"w-full\">\n                            <NavLink to=\"/\"\n                                exact\n                                className=\"w-11/12 px-4 xl:px-6 py-3 xl:py-2 text-gray-600 dark:text-gray-100 inline-flex items-center rounded-full rounded-tl-none rounded-bl-none\"\n                                activeClassName=\"bg-blue-100 dark:bg-gray-700 text-blue-600 bg-transparent\"\n                                onClick={() => toggleSidebarHandler('close')}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"w-4 h-4\" viewBox=\"0 0 16 16\">\n                                    <path d=\"M3 2v4.586l7 7L14.586 9l-7-7H3zM2 2a1 1 0 0 1 1-1h4.586a1 1 0 0 1 .707.293l7 7a1 1 0 0 1 0 1.414l-4.586 4.586a1 1 0 0 1-1.414 0l-7-7A1 1 0 0 1 2 6.586V2z\"/>\n                                    <path d=\"M5.5 5a.5.5 0 1 1 0-1 .5.5 0 0 1 0 1zm0 1a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zM1 7.086a1 1 0 0 0 .293.707L8.75 15.25l-.043.043a1 1 0 0 1-1.414 0l-7-7A1 1 0 0 1 0 7.586V3a1 1 0 0 1 1-1v5.086z\"/>\n                                </svg>\n                                <span className=\"ml-4\">\n                                    Kategori\n                                </span>\n                            </NavLink>\n                            <NavLink to=\"/settings\"\n                                className=\"w-11/12 px-4 xl:px-6 py-3 xl:py-2 text-gray-600 dark:text-gray-100 inline-flex items-center rounded-full rounded-tl-none rounded-bl-none\"\n                                activeClassName=\"bg-blue-100 dark:bg-gray-700 text-blue-600 bg-transparent\"\n                                onClick={() => toggleSidebarHandler('close')}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"w-4 h-4\" viewBox=\"0 0 16 16\">\n                                    <path d=\"M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492zM5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0z\"/>\n                                    <path d=\"M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52l-.094-.319zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115l.094-.319z\"/>\n                                </svg>\n                                <span className=\"ml-4\">\n                                    Pengaturan\n                                </span>\n                            </NavLink>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"w-1/3 xl:hidden\">\n                    <button type=\"button\"\n                        className=\"p-5 md:px-10 outline-none focus:outline-none\"\n                        onClick={() => toggleSidebarHandler('open')}>\n                        <svg className=\"h-6 w-6 text-gray-700 dark:text-gray-100\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16M4 18h16\" />\n                        </svg>\n                    </button>\n                </div>\n                <div className=\"w-1/3 py-3 xl:hidden\">\n                    <NavLink to=\"/\" className=\"block h-8 w-20 mx-auto relative -top-1\">\n                        <img src={logo} alt=\"Webservice\" className=\"w-14 h-auto mx-auto\" />\n                    </NavLink>\n                </div>\n                <div className=\"w-1/3 xl:pr-5\">\n                    <NavLink to=\"/\" className=\"px-6 py-5 md:px-10 xl:py-4 outline-none focus:outline-none float-right\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"w-5 h-5 text-gray-700 dark:text-gray-100\" viewBox=\"0 0 16 16\">\n                            <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\"/>\n                            <path fillRule=\"evenodd\" d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"/>\n                        </svg>\n                    </NavLink>\n                </div>\n            </nav>\n        </header>\n    );\n}\n\nexport default Navigation;","import React from 'react';\n\nfunction Card(props) {\n    return (\n        <div className=\"w-full bg-white dark:bg-gray-500 dark:bg-opacity-30 border border-solid border-gray-200 dark:border-gray-500 rounded-lg\">\n            {props.children}\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\n\nfunction CardHeader(props) {\n    return (\n        <div className=\"p-5\">\n            {props.children}\n        </div>\n    );\n}\n\nexport default CardHeader;","import React from 'react';\n\nfunction CardBody(props) {\n    return (\n        <div>\n            {props.children}\n        </div>\n    );\n}\n\nexport default CardBody;","import React from 'react';\n\nfunction TableButton(props) {\n    const { color, onClick } = props;\n\n    let colorTheme = 'bg-green-500 text-white';\n\n    switch (color) {\n        case 'red':\n            colorTheme = 'bg-red-500 text-white';\n            break;\n\n        case 'green':\n            colorTheme = 'bg-green-500 text-white';\n            break;\n\n        case 'blue':\n            colorTheme = 'bg-blue-500 text-white';\n            break;\n\n        case 'default':\n            colorTheme = 'bg-react-blue text-react-black';\n            break;\n\n        default:\n            colorTheme = 'bg-react-blue text-react-black';\n            break;\n    }\n\n    return (\n        <button className={`${colorTheme} outline-none focus:outline-none inline-flex items-center hover:bg-opacity-80 transition duration-300 px-4 py-1 rounded-md text-xs shadow-md mx-1 mb-1`}\n            onClick={onClick}>\n            {props.children}\n        </button>\n    );\n};\n\nexport default TableButton;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction TableButtonLink(props) {\n    const { color, to, onClick } = props;\n\n    let colorTheme = 'bg-green-500 text-white';\n\n    switch (color) {\n        case 'red':\n            colorTheme = 'bg-red-500 text-white';\n            break;\n\n        case 'green':\n            colorTheme = 'bg-green-500 text-white';\n            break;\n\n        case 'blue':\n            colorTheme = 'bg-blue-500 text-white';\n            break;\n\n        case 'default':\n            colorTheme = 'bg-react-blue text-react-black';\n            break;\n\n        default:\n            colorTheme = 'bg-react-blue text-react-black';\n            break;\n    }\n\n    return (\n        <Link to={to} className={`${colorTheme} outline-none focus:outline-none inline-flex items-center hover:bg-opacity-80 transition duration-300 px-4 py-1 rounded-md text-xs shadow-md mx-1 mb-1`}\n            onClick={onClick}>\n            {props.children}\n        </Link>\n    );\n};\n\nexport default TableButtonLink;","import React from 'react';\n\nfunction Button(props) {\n    const { color, onClick } = props;\n\n    let colorTheme = 'bg-green-500 text-white';\n\n    switch (color) {\n        case 'red':\n            colorTheme = 'bg-red-500 text-white';\n            break;\n\n        case 'green':\n            colorTheme = 'bg-green-500 text-white';\n            break;\n\n        case 'blue':\n            colorTheme = 'bg-blue-500 text-white';\n            break;\n\n        case 'gray':\n            colorTheme = 'bg-gray-500 text-white';\n            break;\n\n        case 'default':\n            colorTheme = 'bg-react-blue text-react-black';\n            break;\n\n        default:\n            colorTheme = 'bg-react-blue text-react-black';\n            break;\n    }\n\n    return (\n        <button className={`${colorTheme} outline-none focus:outline-none inline-flex items-center hover:bg-opacity-80 transition duration-300 px-5 py-2 rounded-md text-sm shadow-md mx-1 mb-1`}\n            onClick={onClick}>\n            {props.children}\n        </button>\n    );\n}\n\nexport default Button;","import React from 'react';\n\nexport const Table = props => {\n    return (\n        <table className=\"table-data\">\n            {props.children}\n        </table>\n    );\n}\n\nexport const Thead = props => {\n    return (\n        <thead className=\"border border-l-0 border-r-0 border-solid border-gray-200 dark:border-gray-500\">\n            {props.children}\n        </thead>\n    );\n};\n\nexport const Tbody = props => {\n    return (\n        <tbody>\n            {props.children}\n        </tbody>\n    );\n};\n\nexport const Tr = props => {\n    return (\n        <tr className=\"border border-solid border-t-0 border-r-0 border-l-0 border-gray-200 dark:border-gray-500\">\n            {props.children}\n        </tr>\n    );\n};\n\nexport const Th = props => {\n    const { className } = props;\n\n    return (\n        <th className={`px-5 py-3 text-left font-bold ${className}`}>\n            {props.children}\n        </th>\n    );\n};\n\nexport const Td = props => {\n    const { className, colspan } = props;\n\n    return (\n        <td className={`px-5 py-3 ${className}`} colSpan={colspan}>\n            {props.children}\n        </td>\n    );\n};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const PathWrapper = props => {\n    return (\n        <div className=\"mb-4 w-full overflow-x-auto\">\n            <ul className=\"mx-1 breadcrumb\">\n                {props.children}\n            </ul>\n        </div>\n    );\n}\n\n\nexport const Link = props => {\n    const { to } = props;\n\n    return (\n        <li className=\"inline-block\">\n            <NavLink to={to} className=\"text-gray-800 dark:text-gray-300 hover:underline\">\n                {props.children}\n            </NavLink>\n        </li>\n    );\n};\n\n\nexport const Separator = _ => {\n    return (\n        <li className=\"inline-block\">\n            <span className=\"text-gray-400 dark:text-gray-400\">&raquo;</span>\n        </li>\n    );\n};\n\n\nexport const CurrentLocation = props => {\n    return (\n        <li className=\"inline-block\">\n            <span className=\"text-gray-600 dark:text-gray-100\">\n                {props.children}\n            </span>\n        </li>\n    );\n};","import React from 'react';\n\nexport const Modal = props => {\n    const { show } = props;\n\n    document.body.classList.remove('modal-active');\n\n    let hideClass = 'opacity-0 pointer-events-none';\n    if (show === true) {\n        hideClass = '';\n        document.body.classList.add('modal-active');\n    }\n\n    return (\n        <div className={`${hideClass} w-full h-full fixed inset-0 z-40 transition-opacity duration-300`}>\n            <div className=\"absolute w-full h-full bg-gray-900 bg-opacity-80 z-40\"></div>\n            {props.children}\n        </div>\n    );\n};\n\n\nexport const ModalContent = props => {\n    return (\n        <div className=\"relative w-11/12 sm:w-3/5 xl:w-2/5 mx-auto h-auto px-6 py-6 bg-white dark:bg-gray-600 my-10 z-50 rounded-lg\">\n            {props.children}\n        </div>\n    );\n}\n\n\nexport const ModalHeader = props => {\n    const { titleText, closeModalHandler } = props;\n\n    return (\n        <div className=\"mb-8 text-center\">\n            <h4 className=\"font-bold text-lg text-ib-one\">\n                {titleText}\n            </h4>\n            {\n                closeModalHandler !== undefined\n                ?   <button type=\"button\"\n                        className=\"absolute right-0 top-0 mt-6 mr-6 text-gray-600 dark:text-gray-200 hover:text-gray-400 hover:dark:text-gray-100 transition duration-300 outline-none focus:outline-none\"\n                        onClick={closeModalHandler}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                        </svg>\n                    </button>\n                :   null\n            }\n        </div>\n    );\n};\n\n\nexport const ModalBody = props => {\n    return (\n        <div className=\"px-2 max-h-[30rem] sm:max-h-[12rem] md:max-h-[24rem] overflow-y-auto\">\n            {props.children}\n        </div>\n    );\n};","const BASE_URL_API = process.env.REACT_APP_BASE_URL_API;\n\nexport const Categories = {\n    GET: BASE_URL_API + '/api/product-categories',\n    CREATE: BASE_URL_API + '/api/product-categories',\n    UPDATE: BASE_URL_API + '/api/product-categories',\n    DELETE: BASE_URL_API + '/api/product-categories'\n};\n\n\nexport const Products = {\n    GET: BASE_URL_API + '/api/products'\n}","import { Categories } from '../constant/API';\nimport axios from 'axios';\n\nclass CategoryService {\n    static getAllCategories() {\n        return fetch(`${Categories.GET}`)\n            .then(response => response.json())\n            .then(responseJson => {\n                if (responseJson.data) {\n                    return Promise.resolve(responseJson.data);\n                }\n                else {\n                    return Promise.reject(`Something went wrong`);\n                }\n            })\n    }\n\n\n    static storeNewCategory(data) {\n        return axios.post(`${Categories.CREATE}`, data)\n        .then(responseJson => {\n            return Promise.resolve('success');\n        })\n        .catch(error => {\n            return Promise.reject(error.response.data.message);\n        });\n    }\n\n\n    static getSingleCategory(id) {\n        return axios.get(`${Categories.GET}/${id}`)\n            .then(responseJson => {\n                if (responseJson.data.data) {\n                    return Promise.resolve(responseJson.data.data);\n                }\n                else {\n                    return Promise.reject(responseJson.data.message);\n                }\n            })\n            .catch(error => {\n                return Promise.reject(error.response.data.message);\n            })\n    }\n\n\n    static updateCategory(id, data) {\n        return axios.put(`${Categories.CREATE}/${id}`, data)\n            .then(responseJson => {\n                return Promise.resolve('success');\n            })\n            .catch(error => {\n                return Promise.reject(error.response.data.message);\n            });\n    }\n\n\n    static deleteCategory(id, data) {\n        return axios.delete(`${Categories.CREATE}/${id}`)\n            .then(responseJson => {\n                return Promise.resolve('success');\n            })\n            .catch(error => {\n                return Promise.reject(error.response.data.message);\n            });\n    }\n\n\n    static getSingleCategoryWithProducts(id) {\n        return axios.get(`${Categories.GET}/${id}/products`)\n            .then(responseJson => {\n                if (responseJson.data.data) {\n                    const responseData = responseJson.data.data;\n\n                    return Promise.resolve({\n                        categoryName: responseData.name,\n                        products: responseData.products\n                    });\n                }\n                else {\n                    return Promise.reject(responseJson.data.message);\n                }\n            })\n            .catch(error => {\n                return Promise.reject(error.response.data.message);\n            })\n    }\n}\n\nexport default CategoryService;","import React from 'react';\n\n\nexport function FormGroup(props) {\n    return (\n        <div className=\"mb-4\">\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function Label(props) {\n    return (\n        <label className=\"block mb-2\">\n            {props.children}\n        </label>\n    );\n}\n\n\nexport function InputText(props) {\n    const { onChange, name, value } = props;\n\n    return (\n        <input\n            type=\"text\"\n            className=\"outline-none focus:outline-none w-full border border-solid border-gray-200 dark:border-gray-500 rounded-md px-4 py-2 dark:bg-gray-500\"\n            name={name}\n            onChange={onChange}\n            value={value} />\n    );\n}","import React, { useEffect, useState } from 'react';\nimport Card from '../components/Card';\nimport CardHeader from '../components/CardHeader';\nimport CardBody from '../components/CardBody';\nimport TableButton from '../components/TableButton';\nimport TableButtonLink from '../components/TableButtonLink';\nimport Button from '../components/Button';\nimport { Table, Tbody, Td, Th, Thead, Tr } from '../components/Table';\nimport { CurrentLocation, Link, PathWrapper, Separator } from '../components/Path';\nimport { Modal, ModalBody, ModalContent, ModalHeader } from '../components/Modal';\nimport '../services/CategoryService';\nimport CategoryService from '../services/CategoryService';\nimport { FormGroup, InputText, Label } from '../components/Form';\nimport { NavLink } from 'react-router-dom';\n\nfunction Category() {\n    const [ categories, setCategories ] = useState([]);\n    const [ isLoaded, setIsLoaded ] = useState(false);\n    const [ showFormModal, setShowFormModal ] = useState(false);\n    const [ showDeleteModal, setShowDeleteModal ] = useState(false);\n\n    const initialCategory = {\n        id: 0,\n        name: ''\n    };\n\n    const [ mode, setMode ] = useState('create');\n    const [ modalFormTitle, setModalFormTitle ] = useState('Tambah Kategori');\n    const [ category, setCategory ] = useState(initialCategory);\n\n\n    useEffect(() => {\n        _fetchCategories()\n    }, []);\n\n\n    const _fetchCategories = async () => {\n        try {\n            const categories = await CategoryService.getAllCategories();\n\n            setCategories([]);\n            setIsLoaded(true);\n            setCategories(categories);\n\n        } catch (error) {\n            alert(error);\n\n        }\n    };\n\n\n    const addCategoryHandler = () => {\n        setMode('create');\n        setModalFormTitle('Tambah Kategori');\n\n        setShowFormModal(true);\n    }\n\n\n    const cancelFormModalHandler = () => {\n        setCategory(initialCategory);\n        setShowFormModal(false);\n    };\n\n\n    const saveFormModalHandler = async () => {\n        if (mode === 'create') {\n            try {\n                await CategoryService.storeNewCategory(category);\n                _fetchCategories();\n                setShowFormModal(false);\n                setCategory(initialCategory);\n\n            } catch (error) {\n                alert(error);\n            }\n        }\n\n\n        if (mode === 'edit') {\n            try {\n                await CategoryService.updateCategory(category.id, category);\n                _fetchCategories();\n                setShowFormModal(false);\n                setCategory(initialCategory);\n\n            } catch (error) {\n                alert(error);\n            }\n        }\n    };\n\n\n    const onChangeHandler = (event) => {\n        setCategory({\n            ...category,\n            [event.target.name]: event.target.value\n        });\n    };\n\n\n    const editCategoryHandler = async (id) => {\n        try {\n            const result = await CategoryService.getSingleCategory(id);\n            setCategory(result);\n\n            setMode('edit');\n            setModalFormTitle('Edit Kategori');\n            setShowFormModal(true);\n\n        } catch (error) {\n            alert(error);\n        }\n    }\n\n\n    const deleteCategoryHandler = (id) => {\n        setCategory({\n            id: id,\n            name: ''\n        });\n\n        setShowDeleteModal(true);\n    }\n\n\n    const cancelDeleteCategoryHandler = () => {\n        setCategory(initialCategory);\n        setShowDeleteModal(false);\n    }\n\n\n    const confirmDeleteCategoryHandler = async () => {\n        try {\n            await CategoryService.deleteCategory(category.id);\n            _fetchCategories();\n            setCategory(initialCategory);\n            setShowDeleteModal(false);\n\n        } catch (error) {\n            alert(error);\n        }\n    }\n\n\n    return (\n        <>\n            <PathWrapper>\n                <Link to=\"/\">Beranda</Link>\n                <Separator></Separator>\n                <CurrentLocation>Kategori Produk</CurrentLocation>\n            </PathWrapper>\n            <Card>\n                <CardHeader>\n                    <h1 className=\"text-xl\">Kategori Produk</h1>\n                </CardHeader>\n                <CardBody>\n                    <div className=\"px-5 mb-5\">\n                        <Button color=\"default\"\n                            onClick={() => addCategoryHandler()}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"w-4 h-4\" viewBox=\"0 0 16 16\">\n                                <path d=\"M8 0c-.176 0-.35.006-.523.017l.064.998a7.117 7.117 0 0 1 .918 0l.064-.998A8.113 8.113 0 0 0 8 0zM6.44.152c-.346.069-.684.16-1.012.27l.321.948c.287-.098.582-.177.884-.237L6.44.153zm4.132.271a7.946 7.946 0 0 0-1.011-.27l-.194.98c.302.06.597.14.884.237l.321-.947zm1.873.925a8 8 0 0 0-.906-.524l-.443.896c.275.136.54.29.793.459l.556-.831zM4.46.824c-.314.155-.616.33-.905.524l.556.83a7.07 7.07 0 0 1 .793-.458L4.46.824zM2.725 1.985c-.262.23-.51.478-.74.74l.752.66c.202-.23.418-.446.648-.648l-.66-.752zm11.29.74a8.058 8.058 0 0 0-.74-.74l-.66.752c.23.202.447.418.648.648l.752-.66zm1.161 1.735a7.98 7.98 0 0 0-.524-.905l-.83.556c.169.253.322.518.458.793l.896-.443zM1.348 3.555c-.194.289-.37.591-.524.906l.896.443c.136-.275.29-.54.459-.793l-.831-.556zM.423 5.428a7.945 7.945 0 0 0-.27 1.011l.98.194c.06-.302.14-.597.237-.884l-.947-.321zM15.848 6.44a7.943 7.943 0 0 0-.27-1.012l-.948.321c.098.287.177.582.237.884l.98-.194zM.017 7.477a8.113 8.113 0 0 0 0 1.046l.998-.064a7.117 7.117 0 0 1 0-.918l-.998-.064zM16 8a8.1 8.1 0 0 0-.017-.523l-.998.064a7.11 7.11 0 0 1 0 .918l.998.064A8.1 8.1 0 0 0 16 8zM.152 9.56c.069.346.16.684.27 1.012l.948-.321a6.944 6.944 0 0 1-.237-.884l-.98.194zm15.425 1.012c.112-.328.202-.666.27-1.011l-.98-.194c-.06.302-.14.597-.237.884l.947.321zM.824 11.54a8 8 0 0 0 .524.905l.83-.556a6.999 6.999 0 0 1-.458-.793l-.896.443zm13.828.905c.194-.289.37-.591.524-.906l-.896-.443c-.136.275-.29.54-.459.793l.831.556zm-12.667.83c.23.262.478.51.74.74l.66-.752a7.047 7.047 0 0 1-.648-.648l-.752.66zm11.29.74c.262-.23.51-.478.74-.74l-.752-.66c-.201.23-.418.447-.648.648l.66.752zm-1.735 1.161c.314-.155.616-.33.905-.524l-.556-.83a7.07 7.07 0 0 1-.793.458l.443.896zm-7.985-.524c.289.194.591.37.906.524l.443-.896a6.998 6.998 0 0 1-.793-.459l-.556.831zm1.873.925c.328.112.666.202 1.011.27l.194-.98a6.953 6.953 0 0 1-.884-.237l-.321.947zm4.132.271a7.944 7.944 0 0 0 1.012-.27l-.321-.948a6.954 6.954 0 0 1-.884.237l.194.98zm-2.083.135a8.1 8.1 0 0 0 1.046 0l-.064-.998a7.11 7.11 0 0 1-.918 0l-.064.998zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3z\"/>\n                            </svg>\n                            <span className=\"ml-2\">Tambah Kategori</span>\n                        </Button>\n                    </div>\n                    <div className=\"w-full overflow-x-auto\">\n                        <Table>\n                            <Thead className=\"border border-l-0 border-r-0 border-solid border-gray-200\">\n                                <Tr>\n                                    <Th className=\"px-5 py-3 text-left w-10\">#</Th>\n                                    <Th className=\"px-5 py-3 text-left\">Kategori</Th>\n                                    <Th className=\"px-5 py-3 text-left w-80\">###</Th>\n                                </Tr>\n                            </Thead>\n                            <Tbody>\n                                {\n                                    isLoaded\n                                    ?   categories.map((category, key) => {\n                                            return (\n                                                <Tr key={key}>\n                                                    <Td className=\"px-5 py-3\">\n                                                        {key + 1}\n                                                    </Td>\n                                                    <Td className=\"px-5 py-3\">\n                                                        <NavLink to={`${category.id}/products`} className=\"hover:underline\">\n                                                            {category.name}\n                                                        </NavLink>\n                                                    </Td>\n                                                    <Td className=\"px-5 py-3\">\n                                                        <TableButtonLink\n                                                            to={`${category.id}/products`}\n                                                            color=\"blue\">\n                                                            Produk\n                                                        </TableButtonLink>\n                                                        <TableButton\n                                                            color=\"green\"\n                                                            onClick={() => editCategoryHandler(category.id)}>\n                                                            Edit\n                                                        </TableButton>\n                                                        <TableButton\n                                                            color=\"red\"\n                                                            onClick={() => deleteCategoryHandler(category.id)}>\n                                                            Hapus\n                                                        </TableButton>\n                                                    </Td>\n                                                </Tr>\n                                            )\n                                        })\n                                    :   <Tr>\n                                            <Td colspan=\"3\" className=\"text-center\">\n                                                <span className=\"text-blue-500\">Memuat data...</span>\n                                            </Td>\n                                        </Tr>\n                                }\n                            </Tbody>\n                        </Table>\n                    </div>\n                </CardBody>\n            </Card>\n\n\n            <Modal show={showFormModal}>\n                <ModalContent>\n                    <ModalHeader titleText={modalFormTitle} closeModalHandler={cancelFormModalHandler} />\n                    <ModalBody>\n                        <div>\n                            <FormGroup>\n                                <Label>Nama Kategori</Label>\n                                <InputText\n                                    name=\"name\"\n                                    onChange={onChangeHandler}\n                                    value={category.name} />\n                            </FormGroup>\n                        </div>\n                        <div className=\"text-center\">\n                            <Button\n                                color=\"gray\"\n                                onClick={cancelFormModalHandler}>\n                                Batal\n                            </Button>\n                            <Button\n                                color=\"default\"\n                                onClick={saveFormModalHandler}>\n                                Simpan\n                            </Button>\n                        </div>\n                    </ModalBody>\n                </ModalContent>\n            </Modal>\n\n\n            <Modal show={showDeleteModal}>\n                <ModalContent>\n                    <ModalHeader titleText=\"Hapus Kategori\" />\n                    <ModalBody>\n                        <div className=\"mb-5 text-center\">\n                            Apakah Anda yakin ingin menghapus kategori ini?\n                        </div>\n                        <div className=\"text-center\">\n                            <Button\n                                color=\"gray\"\n                                onClick={cancelDeleteCategoryHandler}>\n                                Tidak\n                            </Button>\n                            <Button\n                                color=\"red\"\n                                onClick={confirmDeleteCategoryHandler}>\n                                Ya, Hapus\n                            </Button>\n                        </div>\n                    </ModalBody>\n                </ModalContent>\n            </Modal>\n\n        </>\n    );\n}\n\nexport default Category;","import React from 'react';\n\nfunction NotFound() {\n    return (\n        <div className=\"w-full bg-white border border-solid border-gray-100 rounded-lg p-5\">\n            <h1 className=\"text-2xl mb-3\">Not Found</h1>\n            <p>\n                Halaman tidak ditemukan\n            </p>\n        </div>\n    );\n}\n\nexport default NotFound;","import { Products } from '../constant/API';\nimport axios from 'axios';\n\nclass ProductService {\n    static getSingleProduct(id) {\n        return axios.get(`${Products.GET}/${id}`)\n            .then(responseJson => {\n                if (responseJson.data.data) {\n                    return Promise.resolve(responseJson.data.data);\n                }\n                else {\n                    return Promise.reject(responseJson.data.message);\n                }\n            })\n            .catch(error => {\n                return Promise.reject(error.response.data.message);\n            })\n    }\n}\n\nexport default ProductService;","import React, { useEffect, useState } from 'react';\nimport Card from '../components/Card';\nimport CardHeader from '../components/CardHeader';\nimport CardBody from '../components/CardBody';\nimport { Table, Tbody, Td, Th, Thead, Tr } from '../components/Table';\nimport TableButton from '../components/TableButton';\nimport { CurrentLocation, Link, PathWrapper, Separator } from '../components/Path';\nimport { Modal, ModalBody, ModalContent, ModalHeader } from '../components/Modal';\nimport { useParams } from 'react-router';\nimport CategoryService from '../services/CategoryService';\nimport ProductService from '../services/ProductService';\n\nfunction CategoryDetail(props) {\n    const routeParams = useParams();\n    const [ showModal, setShowModal ] = useState(false);\n    const [ categoryName, setCategoryName ] = useState('');\n    const [ products, setProducts ] = useState([]);\n    const [ product, setProduct ] = useState({});\n\n\n    useEffect(() => {\n        _fetchCategory();\n    }, []);\n\n\n    const _fetchCategory = async () => {\n        try {\n            const result = await CategoryService.getSingleCategoryWithProducts(routeParams.categoryId);\n            setCategoryName(result.categoryName);\n            setProducts(result.products);\n\n        } catch (error) {\n            alert(error);\n\n        }\n    }\n\n\n    const detailProductHandler = async (id) => {\n        try {\n            const result = await ProductService.getSingleProduct(id);\n            setProduct(result);\n            setShowModal(true);\n\n        } catch (error) {\n            alert(error);\n        }\n    }\n\n\n    const toggleModalHandler = status => {\n        if (status === 'open') {\n            setShowModal(true);\n        }\n        else {\n            setShowModal(false);\n        }\n    }\n\n\n    return (\n        <>\n            <PathWrapper>\n                <Link to=\"/\">Beranda</Link>\n                <Separator></Separator>\n                <Link to=\"/\">Kategori Produk</Link>\n                <Separator></Separator>\n                <CurrentLocation>Produk</CurrentLocation>\n            </PathWrapper>\n            <Card>\n                <CardHeader>\n                    <h1 className=\"text-xl\">Kategori : {categoryName}</h1>\n                </CardHeader>\n                <CardBody>\n                    <div className=\"px-5 mb-3\">\n                        <h1 className=\"text-base\">Data Produk</h1>\n                    </div>\n                    <div className=\"w-full overflow-x-auto\">\n                        <Table>\n                            <Thead>\n                                <Tr>\n                                    <Th className=\"w-10\">#</Th>\n                                    <Th className=\"w-96\">Nama Produk</Th>\n                                    <Th className=\"w-24\">Kondisi</Th>\n                                    <Th className=\"w-44\">Harga</Th>\n                                    <Th className=\"w-24\">Stok</Th>\n                                    <Th className=\"w-44\">###</Th>\n                                </Tr>\n                            </Thead>\n                            <Tbody>\n                                {products.map((product, key) => {\n                                    return (\n                                        <Tr key={key}>\n                                            <Td>\n                                                {key+1}\n                                            </Td>\n                                            <Td>\n                                                {product.name}\n                                            </Td>\n                                            <Td>\n                                                {product.is_new === 1 ? 'Baru' : 'Bekas'}\n                                            </Td>\n                                            <Td>\n                                                Rp {product.price_stock.price},-\n                                            </Td>\n                                            <Td>\n                                                {product.price_stock.stock}\n                                            </Td>\n                                            <Td>\n                                                <TableButton\n                                                    color=\"default\"\n                                                    onClick={() => detailProductHandler(product.id)}>\n                                                    Detail\n                                                </TableButton>\n                                            </Td>\n                                        </Tr>\n                                    );\n                                }) }\n                            </Tbody>\n                        </Table>\n                    </div>\n                </CardBody>\n            </Card>\n\n\n            {\n                product\n                ?   <Modal show={showModal}>\n                        <ModalContent>\n                            <ModalHeader titleText=\"Detail Produk\" closeModalHandler={() => toggleModalHandler('close')} />\n                            <ModalBody>\n                                <div className=\"mb-4\">\n                                    <h4 className=\"font-bold\">\n                                        Nama\n                                    </h4>\n                                    <p className=\"text-gray-600 dark:text-gray-300\">\n                                        {product.name}\n                                    </p>\n                                </div>\n                                <div className=\"mb-4\">\n                                    <h4 className=\"font-bold\">\n                                        Deskripsi\n                                    </h4>\n                                    <div className=\"text-gray-600 dark:text-gray-300\">\n                                        <div dangerouslySetInnerHTML={{ __html: product.description }}></div>\n                                    </div>\n                                </div>\n                                <div className=\"mb-4\">\n                                    <div className=\"flex flex-row\">\n                                        <div className=\"w-1/2 mr-4\">\n                                            <h4 className=\"font-bold\">\n                                                Kondisi\n                                            </h4>\n                                            <p className=\"text-gray-600 dark:text-gray-300\">\n                                                {product.is_new ? 'Baru' : 'Bekas'}\n                                            </p>\n                                        </div>\n                                        <div className=\"w-1/2 ml-4\">\n                                            <h4 className=\"font-bold\">\n                                                Berat\n                                            </h4>\n                                            <p className=\"text-gray-600 dark:text-gray-300\">\n                                                {product.weight} gram\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                                {\n                                    product.price_stock\n                                    ?   <div className=\"mb-4\">\n                                            <div className=\"flex flex-row\">\n                                                <div className=\"w-1/2 mr-4\">\n                                                    <h4 className=\"font-bold\">\n                                                        Harga\n                                                    </h4>\n                                                    <p className=\"text-gray-600 dark:text-gray-300\">\n                                                        Rp {product.price_stock.price !== undefined ? product.price_stock.price : 0},-\n                                                    </p>\n                                                </div>\n                                                <div className=\"w-1/2 ml-4\">\n                                                    <h4 className=\"font-bold\">\n                                                        Stok\n                                                    </h4>\n                                                    <p className=\"text-gray-600 dark:text-gray-300\">\n                                                        {product.price_stock.stock !== undefined ? product.price_stock.stock : 0}\n                                                    </p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    :   null\n                                }\n                                {\n                                    product.variants\n                                    ?   <div className=\"mb-4\">\n                                            <Table>\n                                                <Thead>\n                                                    <Tr>\n                                                        <Th>Varian</Th>\n                                                        <Th>Harga</Th>\n                                                        <Th>Stok</Th>\n                                                    </Tr>\n                                                </Thead>\n                                                <Tbody>\n                                                    {product.variants.map((variant, key) => {\n                                                        return (\n                                                            <Tr key={key}>\n                                                                <Td>{variant.name}</Td>\n                                                                <Td>Rp {variant.price},-</Td>\n                                                                <Td>{variant.stock}</Td>\n                                                            </Tr>\n                                                        );\n                                                    })}\n                                                </Tbody>\n                                            </Table>\n                                        </div>\n                                    :   null\n                                }\n                            </ModalBody>\n                        </ModalContent>\n                    </Modal>\n                :   null\n            }\n        </>\n    );\n}\n\nexport default CategoryDetail;","export default __webpack_public_path__ + \"static/media/light_preview.9676d526.svg\";","export default __webpack_public_path__ + \"static/media/dark_preview.73e85d03.svg\";","import React, { createContext, useEffect, useState } from 'react';\n\nconst getInitialTheme = () => {\n    if (typeof window !== 'undefined' && window.localStorage) {\n        const storedColorTheme = window.localStorage.getItem('color-theme');\n\n        if (typeof storedColorTheme === 'string') {\n            return storedColorTheme;\n        }\n\n        const userMedia = window.matchMedia('(prefers-color-scheme: dark)');\n        if (userMedia.matches) {\n            return 'dark';\n        }\n    }\n\n    return 'light';\n};\n\n\nexport const ThemeContext = createContext();\n\n\nexport const ThemeProvider = ({ initialTheme, children }) => {\n    const [ theme, setTheme ] = useState(getInitialTheme());\n\n    const rawSetTheme = theme => {\n        const root = window.document.documentElement;\n        const isDark = theme === 'dark';\n\n        root.classList.remove(isDark ? 'light' : 'dark');\n        root.classList.add(theme);\n\n        localStorage.setItem('color-theme', theme);\n    };\n\n    if (initialTheme) {\n        rawSetTheme(initialTheme);\n    }\n\n    useEffect(() => {\n        rawSetTheme(theme);\n    }, [theme]);\n\n    return (\n        <ThemeContext.Provider value={{ theme, setTheme }}>\n            {children}\n        </ThemeContext.Provider>\n    );\n}","import React, { useContext } from 'react';\nimport Card from '../components/Card';\nimport CardBody from '../components/CardBody';\nimport CardHeader from '../components/CardHeader';\nimport { CurrentLocation, Link, PathWrapper, Separator } from '../components/Path';\nimport light_theme_preview from '../img/theme/light_preview.svg';\nimport dark_theme_preview from '../img/theme/dark_preview.svg';\nimport { ThemeContext } from '../context/themeContext';\n\n\nfunction Settings() {\n    const { theme, setTheme } = useContext(ThemeContext);\n\n    const isDark = () => {\n        return theme === 'dark';\n    }\n\n    const toggleThemeHandler = color => {\n        setTheme(color);\n    }\n\n    return (\n        <>\n            <PathWrapper>\n                <Link to=\"/\">Beranda</Link>\n                <Separator></Separator>\n                <CurrentLocation>Pengaturan</CurrentLocation>\n            </PathWrapper>\n            <Card>\n                <CardHeader>\n                    <h1 className=\"text-xl\">Pengaturan Tema</h1>\n                </CardHeader>\n                <CardBody>\n                    <div className=\"px-6 pb-10\">\n                        <div className=\"w-full sm:w-3/5 md:w-1/2 lg:w-2/5 flex flex-row\">\n                            <div className=\"w-1/2 mr-2\">\n                                <div\n                                    className={isDark()\n                                            ? 'border-2 border-solid rounded-lg bg-gray-500 hover:cursor-pointer border-gray-500'\n                                            : 'border-2 border-solid rounded-lg bg-white hover:cursor-pointer border-react-blue'}\n                                    onClick={() => toggleThemeHandler('light')}>\n                                    <img src={light_theme_preview} alt=\"Light Theme Preview\" className=\"rounded-md rounded-bl-none rounded-br-none\"/>\n                                    <div className=\"px-4 py-3 bg-gray-50 dark:bg-gray-500 rounded-lg rounded-tl-none rounded-tr-none\">\n                                        <div className=\"flex items-center\">\n                                            <div className={isDark()\n                                                        ? 'bg-white border-4 rounded-full w-4 h-4 flex flex-shrink-0 justify-center items-center mr-2 border-gray-300'\n                                                        : 'bg-white border-4 rounded-full w-4 h-4 flex flex-shrink-0 justify-center items-center mr-2 border-react-blue'}></div>\n                                            <span>\n                                                Light\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"w-1/2 ml-2\">\n                                <div\n                                    className={isDark()\n                                        ? 'border-2 border-solid rounded-lg bg-gray-500 hover:cursor-pointer border-react-blue'\n                                        : 'border-2 border-solid rounded-lg bg-white hover:cursor-pointer border-gray-500'}\n                                    onClick={() => toggleThemeHandler('dark')}>\n                                    <img src={dark_theme_preview} alt=\"Dark Theme Preview\" className=\"rounded-md rounded-bl-none rounded-br-none\"/>\n                                    <div className=\"px-4 py-3 bg-gray-50 dark:bg-gray-500 rounded-lg rounded-tl-none rounded-tr-none\">\n                                        <div className=\"flex items-center\">\n                                            <div className={isDark()\n                                                        ? 'bg-white border-4 rounded-full w-4 h-4 flex flex-shrink-0 justify-center items-center mr-2 border-react-blue'\n                                                        : 'bg-white border-4 rounded-full w-4 h-4 flex flex-shrink-0 justify-center items-center mr-2 border-gray-300'}></div>\n                                            <span>\n                                                Dark\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default Settings;","import './App.css';\nimport Navigation from './components/Navigation';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Category from './pages/Category';\nimport NotFound from './pages/errors/NotFound';\nimport CategoryDetail from './pages/CategoryDetail';\nimport Settings from './pages/Settings';\nimport { ThemeProvider } from './context/themeContext';\n\nfunction App() {\n  return (\n    <ThemeProvider>\n      <BrowserRouter>\n        <Navigation/>\n        <main className=\"my-20 xl:ml-52\">\n          <div className=\"px-5 xl:px-10\">\n            <Switch>\n              <Route path=\"/\" exact component={Category} />\n              <Route path=\"/:categoryId/products\" component={CategoryDetail} />\n              <Route path=\"/settings\" exact component={Settings} />\n              <Route render={NotFound} />\n            </Switch>\n          </div>\n        </main>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}